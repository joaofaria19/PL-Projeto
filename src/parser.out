Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    OFFSET

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement
Rule 3     statements -> statement statements
Rule 4     statement -> table
Rule 5     statement -> assignment
Rule 6     statement -> comment
Rule 7     statement -> newline
Rule 8     newline -> NEWLINE
Rule 9     comment -> COMMENT NEWLINE
Rule 10    table -> header1
Rule 11    table -> header2
Rule 12    header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET
Rule 13    header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE
Rule 14    header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT
Rule 15    header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET
Rule 16    header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE
Rule 17    header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT
Rule 18    assignment -> name EQUAL elemento
Rule 19    assignment -> name EQUAL elemento NEWLINE
Rule 20    assignment_object -> name EQUAL elemento
Rule 21    name -> elementoVar
Rule 22    name -> elementoVar name2
Rule 23    name2 -> DOT elementoVar
Rule 24    name2 -> DOT elementoVar name2
Rule 25    elementoVar -> VAR
Rule 26    elementoVar -> string
Rule 27    elementoVar -> int
Rule 28    lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
Rule 29    lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
Rule 30    lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
Rule 31    lista2 -> conteudo_lista
Rule 32    lista2 -> conteudo_lista COMMA
Rule 33    conteudo_lista -> elemento
Rule 34    conteudo_lista -> elemento NEWLINE
Rule 35    conteudo_lista -> elemento COMMA conteudo_lista
Rule 36    conteudo_lista -> elemento COMMA NEWLINE conteudo_lista
Rule 37    object -> LEFTBRACKET RIGHTBRACKET
Rule 38    object -> LEFTBRACKET conteudo_object RIGHTBRACKET
Rule 39    conteudo_object -> assignment_object
Rule 40    conteudo_object -> assignment_object COMMA conteudo_object
Rule 41    elemento -> int
Rule 42    elemento -> float
Rule 43    elemento -> inf
Rule 44    elemento -> nan
Rule 45    elemento -> hexadecimal
Rule 46    elemento -> binary
Rule 47    elemento -> octal
Rule 48    elemento -> string
Rule 49    elemento -> mstring
Rule 50    elemento -> lstring
Rule 51    elemento -> mlstring
Rule 52    elemento -> boolean
Rule 53    elemento -> date
Rule 54    elemento -> time
Rule 55    elemento -> datetime
Rule 56    elemento -> offset_datetime
Rule 57    elemento -> lista
Rule 58    elemento -> object
Rule 59    mstring -> MSTRING
Rule 60    mlstring -> MLSTRING
Rule 61    string -> STRING
Rule 62    lstring -> LITERALSTRING
Rule 63    int -> INT
Rule 64    float -> FLOAT
Rule 65    inf -> INF
Rule 66    nan -> NAN
Rule 67    hexadecimal -> HEXADECIMAL
Rule 68    binary -> BINARY
Rule 69    octal -> OCTAL
Rule 70    boolean -> BOOLEAN
Rule 71    date -> DATE
Rule 72    time -> TIME
Rule 73    datetime -> DATETIME
Rule 74    offset_datetime -> OFFSETDATETIME

Terminals, with rules where they appear

BINARY               : 68
BOOLEAN              : 70
COMMA                : 32 35 36 40
COMMENT              : 9 14 17
DATE                 : 71
DATETIME             : 73
DOT                  : 23 24
EQUAL                : 18 19 20
FLOAT                : 64
HEXADECIMAL          : 67
INF                  : 65
INT                  : 63
LEFTBRACKET          : 37 38
LEFTSQUAREBRACKET    : 12 13 14 15 15 16 16 17 17 28 29 30
LITERALSTRING        : 62
MLSTRING             : 60
MSTRING              : 59
NAN                  : 66
NEWLINE              : 8 9 13 16 19 29 34 36
OCTAL                : 69
OFFSET               : 
OFFSETDATETIME       : 74
RIGHTBRACKET         : 37 38
RIGHTSQUAREBRACKET   : 12 13 14 15 15 16 16 17 17 28 29 30
STRING               : 61
TIME                 : 72
VAR                  : 25
error                : 

Nonterminals, with rules where they appear

assignment           : 5
assignment_object    : 39 40
binary               : 46
boolean              : 52
comment              : 6
conteudo_lista       : 31 32 35 36
conteudo_object      : 38 40
date                 : 53
datetime             : 55
elemento             : 18 19 20 33 34 35 36
elementoVar          : 21 22 23 24
float                : 42
header1              : 10
header2              : 11
hexadecimal          : 45
inf                  : 43
int                  : 27 41
lista                : 57
lista2               : 29 30
lstring              : 50
mlstring             : 51
mstring              : 49
name                 : 12 13 14 15 16 17 18 19 20
name2                : 22 24
nan                  : 44
newline              : 7
object               : 58
octal                : 47
offset_datetime      : 56
program              : 0
statement            : 2 3
statements           : 1 3
string               : 26 48
table                : 4
time                 : 54

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . table
    (5) statement -> . assignment
    (6) statement -> . comment
    (7) statement -> . newline
    (10) table -> . header1
    (11) table -> . header2
    (18) assignment -> . name EQUAL elemento
    (19) assignment -> . name EQUAL elemento NEWLINE
    (9) comment -> . COMMENT NEWLINE
    (8) newline -> . NEWLINE
    (12) header1 -> . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET
    (13) header1 -> . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE
    (14) header1 -> . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT
    (15) header2 -> . LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET
    (16) header2 -> . LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE
    (17) header2 -> . LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT
    (21) name -> . elementoVar
    (22) name -> . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    COMMENT         shift and go to state 12
    NEWLINE         shift and go to state 11
    LEFTSQUAREBRACKET shift and go to state 13
    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    table                          shift and go to state 4
    assignment                     shift and go to state 5
    comment                        shift and go to state 6
    newline                        shift and go to state 7
    header1                        shift and go to state 8
    header2                        shift and go to state 9
    name                           shift and go to state 10
    elementoVar                    shift and go to state 14
    string                         shift and go to state 16
    int                            shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)


state 3

    (2) statements -> statement .
    (3) statements -> statement . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . table
    (5) statement -> . assignment
    (6) statement -> . comment
    (7) statement -> . newline
    (10) table -> . header1
    (11) table -> . header2
    (18) assignment -> . name EQUAL elemento
    (19) assignment -> . name EQUAL elemento NEWLINE
    (9) comment -> . COMMENT NEWLINE
    (8) newline -> . NEWLINE
    (12) header1 -> . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET
    (13) header1 -> . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE
    (14) header1 -> . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT
    (15) header2 -> . LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET
    (16) header2 -> . LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE
    (17) header2 -> . LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT
    (21) name -> . elementoVar
    (22) name -> . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    $end            reduce using rule 2 (statements -> statement .)
    COMMENT         shift and go to state 12
    NEWLINE         shift and go to state 11
    LEFTSQUAREBRACKET shift and go to state 13
    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    statement                      shift and go to state 3
    statements                     shift and go to state 20
    table                          shift and go to state 4
    assignment                     shift and go to state 5
    comment                        shift and go to state 6
    newline                        shift and go to state 7
    header1                        shift and go to state 8
    header2                        shift and go to state 9
    name                           shift and go to state 10
    elementoVar                    shift and go to state 14
    string                         shift and go to state 16
    int                            shift and go to state 17

state 4

    (4) statement -> table .

    COMMENT         reduce using rule 4 (statement -> table .)
    NEWLINE         reduce using rule 4 (statement -> table .)
    LEFTSQUAREBRACKET reduce using rule 4 (statement -> table .)
    VAR             reduce using rule 4 (statement -> table .)
    STRING          reduce using rule 4 (statement -> table .)
    INT             reduce using rule 4 (statement -> table .)
    $end            reduce using rule 4 (statement -> table .)


state 5

    (5) statement -> assignment .

    COMMENT         reduce using rule 5 (statement -> assignment .)
    NEWLINE         reduce using rule 5 (statement -> assignment .)
    LEFTSQUAREBRACKET reduce using rule 5 (statement -> assignment .)
    VAR             reduce using rule 5 (statement -> assignment .)
    STRING          reduce using rule 5 (statement -> assignment .)
    INT             reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> comment .

    COMMENT         reduce using rule 6 (statement -> comment .)
    NEWLINE         reduce using rule 6 (statement -> comment .)
    LEFTSQUAREBRACKET reduce using rule 6 (statement -> comment .)
    VAR             reduce using rule 6 (statement -> comment .)
    STRING          reduce using rule 6 (statement -> comment .)
    INT             reduce using rule 6 (statement -> comment .)
    $end            reduce using rule 6 (statement -> comment .)


state 7

    (7) statement -> newline .

    COMMENT         reduce using rule 7 (statement -> newline .)
    NEWLINE         reduce using rule 7 (statement -> newline .)
    LEFTSQUAREBRACKET reduce using rule 7 (statement -> newline .)
    VAR             reduce using rule 7 (statement -> newline .)
    STRING          reduce using rule 7 (statement -> newline .)
    INT             reduce using rule 7 (statement -> newline .)
    $end            reduce using rule 7 (statement -> newline .)


state 8

    (10) table -> header1 .

    COMMENT         reduce using rule 10 (table -> header1 .)
    NEWLINE         reduce using rule 10 (table -> header1 .)
    LEFTSQUAREBRACKET reduce using rule 10 (table -> header1 .)
    VAR             reduce using rule 10 (table -> header1 .)
    STRING          reduce using rule 10 (table -> header1 .)
    INT             reduce using rule 10 (table -> header1 .)
    $end            reduce using rule 10 (table -> header1 .)


state 9

    (11) table -> header2 .

    COMMENT         reduce using rule 11 (table -> header2 .)
    NEWLINE         reduce using rule 11 (table -> header2 .)
    LEFTSQUAREBRACKET reduce using rule 11 (table -> header2 .)
    VAR             reduce using rule 11 (table -> header2 .)
    STRING          reduce using rule 11 (table -> header2 .)
    INT             reduce using rule 11 (table -> header2 .)
    $end            reduce using rule 11 (table -> header2 .)


state 10

    (18) assignment -> name . EQUAL elemento
    (19) assignment -> name . EQUAL elemento NEWLINE

    EQUAL           shift and go to state 21


state 11

    (8) newline -> NEWLINE .

    COMMENT         reduce using rule 8 (newline -> NEWLINE .)
    NEWLINE         reduce using rule 8 (newline -> NEWLINE .)
    LEFTSQUAREBRACKET reduce using rule 8 (newline -> NEWLINE .)
    VAR             reduce using rule 8 (newline -> NEWLINE .)
    STRING          reduce using rule 8 (newline -> NEWLINE .)
    INT             reduce using rule 8 (newline -> NEWLINE .)
    $end            reduce using rule 8 (newline -> NEWLINE .)


state 12

    (9) comment -> COMMENT . NEWLINE

    NEWLINE         shift and go to state 22


state 13

    (12) header1 -> LEFTSQUAREBRACKET . name RIGHTSQUAREBRACKET
    (13) header1 -> LEFTSQUAREBRACKET . name RIGHTSQUAREBRACKET NEWLINE
    (14) header1 -> LEFTSQUAREBRACKET . name RIGHTSQUAREBRACKET COMMENT
    (15) header2 -> LEFTSQUAREBRACKET . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET
    (16) header2 -> LEFTSQUAREBRACKET . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE
    (17) header2 -> LEFTSQUAREBRACKET . LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT
    (21) name -> . elementoVar
    (22) name -> . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    LEFTSQUAREBRACKET shift and go to state 23
    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    name                           shift and go to state 24
    elementoVar                    shift and go to state 14
    string                         shift and go to state 16
    int                            shift and go to state 17

state 14

    (21) name -> elementoVar .
    (22) name -> elementoVar . name2
    (23) name2 -> . DOT elementoVar
    (24) name2 -> . DOT elementoVar name2

    EQUAL           reduce using rule 21 (name -> elementoVar .)
    RIGHTSQUAREBRACKET reduce using rule 21 (name -> elementoVar .)
    DOT             shift and go to state 26

    name2                          shift and go to state 25

state 15

    (25) elementoVar -> VAR .

    DOT             reduce using rule 25 (elementoVar -> VAR .)
    EQUAL           reduce using rule 25 (elementoVar -> VAR .)
    RIGHTSQUAREBRACKET reduce using rule 25 (elementoVar -> VAR .)


state 16

    (26) elementoVar -> string .

    DOT             reduce using rule 26 (elementoVar -> string .)
    EQUAL           reduce using rule 26 (elementoVar -> string .)
    RIGHTSQUAREBRACKET reduce using rule 26 (elementoVar -> string .)


state 17

    (27) elementoVar -> int .

    DOT             reduce using rule 27 (elementoVar -> int .)
    EQUAL           reduce using rule 27 (elementoVar -> int .)
    RIGHTSQUAREBRACKET reduce using rule 27 (elementoVar -> int .)


state 18

    (61) string -> STRING .

    DOT             reduce using rule 61 (string -> STRING .)
    EQUAL           reduce using rule 61 (string -> STRING .)
    RIGHTSQUAREBRACKET reduce using rule 61 (string -> STRING .)
    NEWLINE         reduce using rule 61 (string -> STRING .)
    COMMENT         reduce using rule 61 (string -> STRING .)
    LEFTSQUAREBRACKET reduce using rule 61 (string -> STRING .)
    VAR             reduce using rule 61 (string -> STRING .)
    STRING          reduce using rule 61 (string -> STRING .)
    INT             reduce using rule 61 (string -> STRING .)
    $end            reduce using rule 61 (string -> STRING .)
    COMMA           reduce using rule 61 (string -> STRING .)
    RIGHTBRACKET    reduce using rule 61 (string -> STRING .)


state 19

    (63) int -> INT .

    DOT             reduce using rule 63 (int -> INT .)
    EQUAL           reduce using rule 63 (int -> INT .)
    RIGHTSQUAREBRACKET reduce using rule 63 (int -> INT .)
    NEWLINE         reduce using rule 63 (int -> INT .)
    COMMENT         reduce using rule 63 (int -> INT .)
    LEFTSQUAREBRACKET reduce using rule 63 (int -> INT .)
    VAR             reduce using rule 63 (int -> INT .)
    STRING          reduce using rule 63 (int -> INT .)
    INT             reduce using rule 63 (int -> INT .)
    $end            reduce using rule 63 (int -> INT .)
    COMMA           reduce using rule 63 (int -> INT .)
    RIGHTBRACKET    reduce using rule 63 (int -> INT .)


state 20

    (3) statements -> statement statements .

    $end            reduce using rule 3 (statements -> statement statements .)


state 21

    (18) assignment -> name EQUAL . elemento
    (19) assignment -> name EQUAL . elemento NEWLINE
    (41) elemento -> . int
    (42) elemento -> . float
    (43) elemento -> . inf
    (44) elemento -> . nan
    (45) elemento -> . hexadecimal
    (46) elemento -> . binary
    (47) elemento -> . octal
    (48) elemento -> . string
    (49) elemento -> . mstring
    (50) elemento -> . lstring
    (51) elemento -> . mlstring
    (52) elemento -> . boolean
    (53) elemento -> . date
    (54) elemento -> . time
    (55) elemento -> . datetime
    (56) elemento -> . offset_datetime
    (57) elemento -> . lista
    (58) elemento -> . object
    (63) int -> . INT
    (64) float -> . FLOAT
    (65) inf -> . INF
    (66) nan -> . NAN
    (67) hexadecimal -> . HEXADECIMAL
    (68) binary -> . BINARY
    (69) octal -> . OCTAL
    (61) string -> . STRING
    (59) mstring -> . MSTRING
    (62) lstring -> . LITERALSTRING
    (60) mlstring -> . MLSTRING
    (70) boolean -> . BOOLEAN
    (71) date -> . DATE
    (72) time -> . TIME
    (73) datetime -> . DATETIME
    (74) offset_datetime -> . OFFSETDATETIME
    (28) lista -> . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
    (29) lista -> . LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> . LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
    (37) object -> . LEFTBRACKET RIGHTBRACKET
    (38) object -> . LEFTBRACKET conteudo_object RIGHTBRACKET

    INT             shift and go to state 19
    FLOAT           shift and go to state 46
    INF             shift and go to state 47
    NAN             shift and go to state 48
    HEXADECIMAL     shift and go to state 49
    BINARY          shift and go to state 50
    OCTAL           shift and go to state 51
    STRING          shift and go to state 18
    MSTRING         shift and go to state 52
    LITERALSTRING   shift and go to state 53
    MLSTRING        shift and go to state 54
    BOOLEAN         shift and go to state 55
    DATE            shift and go to state 56
    TIME            shift and go to state 57
    DATETIME        shift and go to state 58
    OFFSETDATETIME  shift and go to state 59
    LEFTSQUAREBRACKET shift and go to state 60
    LEFTBRACKET     shift and go to state 61

    elemento                       shift and go to state 27
    int                            shift and go to state 28
    float                          shift and go to state 29
    inf                            shift and go to state 30
    nan                            shift and go to state 31
    hexadecimal                    shift and go to state 32
    binary                         shift and go to state 33
    octal                          shift and go to state 34
    string                         shift and go to state 35
    mstring                        shift and go to state 36
    lstring                        shift and go to state 37
    mlstring                       shift and go to state 38
    boolean                        shift and go to state 39
    date                           shift and go to state 40
    time                           shift and go to state 41
    datetime                       shift and go to state 42
    offset_datetime                shift and go to state 43
    lista                          shift and go to state 44
    object                         shift and go to state 45

state 22

    (9) comment -> COMMENT NEWLINE .

    COMMENT         reduce using rule 9 (comment -> COMMENT NEWLINE .)
    NEWLINE         reduce using rule 9 (comment -> COMMENT NEWLINE .)
    LEFTSQUAREBRACKET reduce using rule 9 (comment -> COMMENT NEWLINE .)
    VAR             reduce using rule 9 (comment -> COMMENT NEWLINE .)
    STRING          reduce using rule 9 (comment -> COMMENT NEWLINE .)
    INT             reduce using rule 9 (comment -> COMMENT NEWLINE .)
    $end            reduce using rule 9 (comment -> COMMENT NEWLINE .)


state 23

    (15) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET . name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET
    (16) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET . name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE
    (17) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET . name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT
    (21) name -> . elementoVar
    (22) name -> . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    name                           shift and go to state 62
    elementoVar                    shift and go to state 14
    string                         shift and go to state 16
    int                            shift and go to state 17

state 24

    (12) header1 -> LEFTSQUAREBRACKET name . RIGHTSQUAREBRACKET
    (13) header1 -> LEFTSQUAREBRACKET name . RIGHTSQUAREBRACKET NEWLINE
    (14) header1 -> LEFTSQUAREBRACKET name . RIGHTSQUAREBRACKET COMMENT

    RIGHTSQUAREBRACKET shift and go to state 63


state 25

    (22) name -> elementoVar name2 .

    EQUAL           reduce using rule 22 (name -> elementoVar name2 .)
    RIGHTSQUAREBRACKET reduce using rule 22 (name -> elementoVar name2 .)


state 26

    (23) name2 -> DOT . elementoVar
    (24) name2 -> DOT . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    elementoVar                    shift and go to state 64
    string                         shift and go to state 16
    int                            shift and go to state 17

state 27

    (18) assignment -> name EQUAL elemento .
    (19) assignment -> name EQUAL elemento . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    COMMENT         reduce using rule 18 (assignment -> name EQUAL elemento .)
    LEFTSQUAREBRACKET reduce using rule 18 (assignment -> name EQUAL elemento .)
    VAR             reduce using rule 18 (assignment -> name EQUAL elemento .)
    STRING          reduce using rule 18 (assignment -> name EQUAL elemento .)
    INT             reduce using rule 18 (assignment -> name EQUAL elemento .)
    $end            reduce using rule 18 (assignment -> name EQUAL elemento .)
    NEWLINE         shift and go to state 65

  ! NEWLINE         [ reduce using rule 18 (assignment -> name EQUAL elemento .) ]


state 28

    (41) elemento -> int .

    NEWLINE         reduce using rule 41 (elemento -> int .)
    COMMENT         reduce using rule 41 (elemento -> int .)
    LEFTSQUAREBRACKET reduce using rule 41 (elemento -> int .)
    VAR             reduce using rule 41 (elemento -> int .)
    STRING          reduce using rule 41 (elemento -> int .)
    INT             reduce using rule 41 (elemento -> int .)
    $end            reduce using rule 41 (elemento -> int .)
    COMMA           reduce using rule 41 (elemento -> int .)
    RIGHTSQUAREBRACKET reduce using rule 41 (elemento -> int .)
    RIGHTBRACKET    reduce using rule 41 (elemento -> int .)


state 29

    (42) elemento -> float .

    NEWLINE         reduce using rule 42 (elemento -> float .)
    COMMENT         reduce using rule 42 (elemento -> float .)
    LEFTSQUAREBRACKET reduce using rule 42 (elemento -> float .)
    VAR             reduce using rule 42 (elemento -> float .)
    STRING          reduce using rule 42 (elemento -> float .)
    INT             reduce using rule 42 (elemento -> float .)
    $end            reduce using rule 42 (elemento -> float .)
    COMMA           reduce using rule 42 (elemento -> float .)
    RIGHTSQUAREBRACKET reduce using rule 42 (elemento -> float .)
    RIGHTBRACKET    reduce using rule 42 (elemento -> float .)


state 30

    (43) elemento -> inf .

    NEWLINE         reduce using rule 43 (elemento -> inf .)
    COMMENT         reduce using rule 43 (elemento -> inf .)
    LEFTSQUAREBRACKET reduce using rule 43 (elemento -> inf .)
    VAR             reduce using rule 43 (elemento -> inf .)
    STRING          reduce using rule 43 (elemento -> inf .)
    INT             reduce using rule 43 (elemento -> inf .)
    $end            reduce using rule 43 (elemento -> inf .)
    COMMA           reduce using rule 43 (elemento -> inf .)
    RIGHTSQUAREBRACKET reduce using rule 43 (elemento -> inf .)
    RIGHTBRACKET    reduce using rule 43 (elemento -> inf .)


state 31

    (44) elemento -> nan .

    NEWLINE         reduce using rule 44 (elemento -> nan .)
    COMMENT         reduce using rule 44 (elemento -> nan .)
    LEFTSQUAREBRACKET reduce using rule 44 (elemento -> nan .)
    VAR             reduce using rule 44 (elemento -> nan .)
    STRING          reduce using rule 44 (elemento -> nan .)
    INT             reduce using rule 44 (elemento -> nan .)
    $end            reduce using rule 44 (elemento -> nan .)
    COMMA           reduce using rule 44 (elemento -> nan .)
    RIGHTSQUAREBRACKET reduce using rule 44 (elemento -> nan .)
    RIGHTBRACKET    reduce using rule 44 (elemento -> nan .)


state 32

    (45) elemento -> hexadecimal .

    NEWLINE         reduce using rule 45 (elemento -> hexadecimal .)
    COMMENT         reduce using rule 45 (elemento -> hexadecimal .)
    LEFTSQUAREBRACKET reduce using rule 45 (elemento -> hexadecimal .)
    VAR             reduce using rule 45 (elemento -> hexadecimal .)
    STRING          reduce using rule 45 (elemento -> hexadecimal .)
    INT             reduce using rule 45 (elemento -> hexadecimal .)
    $end            reduce using rule 45 (elemento -> hexadecimal .)
    COMMA           reduce using rule 45 (elemento -> hexadecimal .)
    RIGHTSQUAREBRACKET reduce using rule 45 (elemento -> hexadecimal .)
    RIGHTBRACKET    reduce using rule 45 (elemento -> hexadecimal .)


state 33

    (46) elemento -> binary .

    NEWLINE         reduce using rule 46 (elemento -> binary .)
    COMMENT         reduce using rule 46 (elemento -> binary .)
    LEFTSQUAREBRACKET reduce using rule 46 (elemento -> binary .)
    VAR             reduce using rule 46 (elemento -> binary .)
    STRING          reduce using rule 46 (elemento -> binary .)
    INT             reduce using rule 46 (elemento -> binary .)
    $end            reduce using rule 46 (elemento -> binary .)
    COMMA           reduce using rule 46 (elemento -> binary .)
    RIGHTSQUAREBRACKET reduce using rule 46 (elemento -> binary .)
    RIGHTBRACKET    reduce using rule 46 (elemento -> binary .)


state 34

    (47) elemento -> octal .

    NEWLINE         reduce using rule 47 (elemento -> octal .)
    COMMENT         reduce using rule 47 (elemento -> octal .)
    LEFTSQUAREBRACKET reduce using rule 47 (elemento -> octal .)
    VAR             reduce using rule 47 (elemento -> octal .)
    STRING          reduce using rule 47 (elemento -> octal .)
    INT             reduce using rule 47 (elemento -> octal .)
    $end            reduce using rule 47 (elemento -> octal .)
    COMMA           reduce using rule 47 (elemento -> octal .)
    RIGHTSQUAREBRACKET reduce using rule 47 (elemento -> octal .)
    RIGHTBRACKET    reduce using rule 47 (elemento -> octal .)


state 35

    (48) elemento -> string .

    NEWLINE         reduce using rule 48 (elemento -> string .)
    COMMENT         reduce using rule 48 (elemento -> string .)
    LEFTSQUAREBRACKET reduce using rule 48 (elemento -> string .)
    VAR             reduce using rule 48 (elemento -> string .)
    STRING          reduce using rule 48 (elemento -> string .)
    INT             reduce using rule 48 (elemento -> string .)
    $end            reduce using rule 48 (elemento -> string .)
    COMMA           reduce using rule 48 (elemento -> string .)
    RIGHTSQUAREBRACKET reduce using rule 48 (elemento -> string .)
    RIGHTBRACKET    reduce using rule 48 (elemento -> string .)


state 36

    (49) elemento -> mstring .

    NEWLINE         reduce using rule 49 (elemento -> mstring .)
    COMMENT         reduce using rule 49 (elemento -> mstring .)
    LEFTSQUAREBRACKET reduce using rule 49 (elemento -> mstring .)
    VAR             reduce using rule 49 (elemento -> mstring .)
    STRING          reduce using rule 49 (elemento -> mstring .)
    INT             reduce using rule 49 (elemento -> mstring .)
    $end            reduce using rule 49 (elemento -> mstring .)
    COMMA           reduce using rule 49 (elemento -> mstring .)
    RIGHTSQUAREBRACKET reduce using rule 49 (elemento -> mstring .)
    RIGHTBRACKET    reduce using rule 49 (elemento -> mstring .)


state 37

    (50) elemento -> lstring .

    NEWLINE         reduce using rule 50 (elemento -> lstring .)
    COMMENT         reduce using rule 50 (elemento -> lstring .)
    LEFTSQUAREBRACKET reduce using rule 50 (elemento -> lstring .)
    VAR             reduce using rule 50 (elemento -> lstring .)
    STRING          reduce using rule 50 (elemento -> lstring .)
    INT             reduce using rule 50 (elemento -> lstring .)
    $end            reduce using rule 50 (elemento -> lstring .)
    COMMA           reduce using rule 50 (elemento -> lstring .)
    RIGHTSQUAREBRACKET reduce using rule 50 (elemento -> lstring .)
    RIGHTBRACKET    reduce using rule 50 (elemento -> lstring .)


state 38

    (51) elemento -> mlstring .

    NEWLINE         reduce using rule 51 (elemento -> mlstring .)
    COMMENT         reduce using rule 51 (elemento -> mlstring .)
    LEFTSQUAREBRACKET reduce using rule 51 (elemento -> mlstring .)
    VAR             reduce using rule 51 (elemento -> mlstring .)
    STRING          reduce using rule 51 (elemento -> mlstring .)
    INT             reduce using rule 51 (elemento -> mlstring .)
    $end            reduce using rule 51 (elemento -> mlstring .)
    COMMA           reduce using rule 51 (elemento -> mlstring .)
    RIGHTSQUAREBRACKET reduce using rule 51 (elemento -> mlstring .)
    RIGHTBRACKET    reduce using rule 51 (elemento -> mlstring .)


state 39

    (52) elemento -> boolean .

    NEWLINE         reduce using rule 52 (elemento -> boolean .)
    COMMENT         reduce using rule 52 (elemento -> boolean .)
    LEFTSQUAREBRACKET reduce using rule 52 (elemento -> boolean .)
    VAR             reduce using rule 52 (elemento -> boolean .)
    STRING          reduce using rule 52 (elemento -> boolean .)
    INT             reduce using rule 52 (elemento -> boolean .)
    $end            reduce using rule 52 (elemento -> boolean .)
    COMMA           reduce using rule 52 (elemento -> boolean .)
    RIGHTSQUAREBRACKET reduce using rule 52 (elemento -> boolean .)
    RIGHTBRACKET    reduce using rule 52 (elemento -> boolean .)


state 40

    (53) elemento -> date .

    NEWLINE         reduce using rule 53 (elemento -> date .)
    COMMENT         reduce using rule 53 (elemento -> date .)
    LEFTSQUAREBRACKET reduce using rule 53 (elemento -> date .)
    VAR             reduce using rule 53 (elemento -> date .)
    STRING          reduce using rule 53 (elemento -> date .)
    INT             reduce using rule 53 (elemento -> date .)
    $end            reduce using rule 53 (elemento -> date .)
    COMMA           reduce using rule 53 (elemento -> date .)
    RIGHTSQUAREBRACKET reduce using rule 53 (elemento -> date .)
    RIGHTBRACKET    reduce using rule 53 (elemento -> date .)


state 41

    (54) elemento -> time .

    NEWLINE         reduce using rule 54 (elemento -> time .)
    COMMENT         reduce using rule 54 (elemento -> time .)
    LEFTSQUAREBRACKET reduce using rule 54 (elemento -> time .)
    VAR             reduce using rule 54 (elemento -> time .)
    STRING          reduce using rule 54 (elemento -> time .)
    INT             reduce using rule 54 (elemento -> time .)
    $end            reduce using rule 54 (elemento -> time .)
    COMMA           reduce using rule 54 (elemento -> time .)
    RIGHTSQUAREBRACKET reduce using rule 54 (elemento -> time .)
    RIGHTBRACKET    reduce using rule 54 (elemento -> time .)


state 42

    (55) elemento -> datetime .

    NEWLINE         reduce using rule 55 (elemento -> datetime .)
    COMMENT         reduce using rule 55 (elemento -> datetime .)
    LEFTSQUAREBRACKET reduce using rule 55 (elemento -> datetime .)
    VAR             reduce using rule 55 (elemento -> datetime .)
    STRING          reduce using rule 55 (elemento -> datetime .)
    INT             reduce using rule 55 (elemento -> datetime .)
    $end            reduce using rule 55 (elemento -> datetime .)
    COMMA           reduce using rule 55 (elemento -> datetime .)
    RIGHTSQUAREBRACKET reduce using rule 55 (elemento -> datetime .)
    RIGHTBRACKET    reduce using rule 55 (elemento -> datetime .)


state 43

    (56) elemento -> offset_datetime .

    NEWLINE         reduce using rule 56 (elemento -> offset_datetime .)
    COMMENT         reduce using rule 56 (elemento -> offset_datetime .)
    LEFTSQUAREBRACKET reduce using rule 56 (elemento -> offset_datetime .)
    VAR             reduce using rule 56 (elemento -> offset_datetime .)
    STRING          reduce using rule 56 (elemento -> offset_datetime .)
    INT             reduce using rule 56 (elemento -> offset_datetime .)
    $end            reduce using rule 56 (elemento -> offset_datetime .)
    COMMA           reduce using rule 56 (elemento -> offset_datetime .)
    RIGHTSQUAREBRACKET reduce using rule 56 (elemento -> offset_datetime .)
    RIGHTBRACKET    reduce using rule 56 (elemento -> offset_datetime .)


state 44

    (57) elemento -> lista .

    NEWLINE         reduce using rule 57 (elemento -> lista .)
    COMMENT         reduce using rule 57 (elemento -> lista .)
    LEFTSQUAREBRACKET reduce using rule 57 (elemento -> lista .)
    VAR             reduce using rule 57 (elemento -> lista .)
    STRING          reduce using rule 57 (elemento -> lista .)
    INT             reduce using rule 57 (elemento -> lista .)
    $end            reduce using rule 57 (elemento -> lista .)
    COMMA           reduce using rule 57 (elemento -> lista .)
    RIGHTSQUAREBRACKET reduce using rule 57 (elemento -> lista .)
    RIGHTBRACKET    reduce using rule 57 (elemento -> lista .)


state 45

    (58) elemento -> object .

    NEWLINE         reduce using rule 58 (elemento -> object .)
    COMMENT         reduce using rule 58 (elemento -> object .)
    LEFTSQUAREBRACKET reduce using rule 58 (elemento -> object .)
    VAR             reduce using rule 58 (elemento -> object .)
    STRING          reduce using rule 58 (elemento -> object .)
    INT             reduce using rule 58 (elemento -> object .)
    $end            reduce using rule 58 (elemento -> object .)
    COMMA           reduce using rule 58 (elemento -> object .)
    RIGHTSQUAREBRACKET reduce using rule 58 (elemento -> object .)
    RIGHTBRACKET    reduce using rule 58 (elemento -> object .)


state 46

    (64) float -> FLOAT .

    NEWLINE         reduce using rule 64 (float -> FLOAT .)
    COMMENT         reduce using rule 64 (float -> FLOAT .)
    LEFTSQUAREBRACKET reduce using rule 64 (float -> FLOAT .)
    VAR             reduce using rule 64 (float -> FLOAT .)
    STRING          reduce using rule 64 (float -> FLOAT .)
    INT             reduce using rule 64 (float -> FLOAT .)
    $end            reduce using rule 64 (float -> FLOAT .)
    COMMA           reduce using rule 64 (float -> FLOAT .)
    RIGHTSQUAREBRACKET reduce using rule 64 (float -> FLOAT .)
    RIGHTBRACKET    reduce using rule 64 (float -> FLOAT .)


state 47

    (65) inf -> INF .

    NEWLINE         reduce using rule 65 (inf -> INF .)
    COMMENT         reduce using rule 65 (inf -> INF .)
    LEFTSQUAREBRACKET reduce using rule 65 (inf -> INF .)
    VAR             reduce using rule 65 (inf -> INF .)
    STRING          reduce using rule 65 (inf -> INF .)
    INT             reduce using rule 65 (inf -> INF .)
    $end            reduce using rule 65 (inf -> INF .)
    COMMA           reduce using rule 65 (inf -> INF .)
    RIGHTSQUAREBRACKET reduce using rule 65 (inf -> INF .)
    RIGHTBRACKET    reduce using rule 65 (inf -> INF .)


state 48

    (66) nan -> NAN .

    NEWLINE         reduce using rule 66 (nan -> NAN .)
    COMMENT         reduce using rule 66 (nan -> NAN .)
    LEFTSQUAREBRACKET reduce using rule 66 (nan -> NAN .)
    VAR             reduce using rule 66 (nan -> NAN .)
    STRING          reduce using rule 66 (nan -> NAN .)
    INT             reduce using rule 66 (nan -> NAN .)
    $end            reduce using rule 66 (nan -> NAN .)
    COMMA           reduce using rule 66 (nan -> NAN .)
    RIGHTSQUAREBRACKET reduce using rule 66 (nan -> NAN .)
    RIGHTBRACKET    reduce using rule 66 (nan -> NAN .)


state 49

    (67) hexadecimal -> HEXADECIMAL .

    NEWLINE         reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    COMMENT         reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    LEFTSQUAREBRACKET reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    VAR             reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    STRING          reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    INT             reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    $end            reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    COMMA           reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    RIGHTSQUAREBRACKET reduce using rule 67 (hexadecimal -> HEXADECIMAL .)
    RIGHTBRACKET    reduce using rule 67 (hexadecimal -> HEXADECIMAL .)


state 50

    (68) binary -> BINARY .

    NEWLINE         reduce using rule 68 (binary -> BINARY .)
    COMMENT         reduce using rule 68 (binary -> BINARY .)
    LEFTSQUAREBRACKET reduce using rule 68 (binary -> BINARY .)
    VAR             reduce using rule 68 (binary -> BINARY .)
    STRING          reduce using rule 68 (binary -> BINARY .)
    INT             reduce using rule 68 (binary -> BINARY .)
    $end            reduce using rule 68 (binary -> BINARY .)
    COMMA           reduce using rule 68 (binary -> BINARY .)
    RIGHTSQUAREBRACKET reduce using rule 68 (binary -> BINARY .)
    RIGHTBRACKET    reduce using rule 68 (binary -> BINARY .)


state 51

    (69) octal -> OCTAL .

    NEWLINE         reduce using rule 69 (octal -> OCTAL .)
    COMMENT         reduce using rule 69 (octal -> OCTAL .)
    LEFTSQUAREBRACKET reduce using rule 69 (octal -> OCTAL .)
    VAR             reduce using rule 69 (octal -> OCTAL .)
    STRING          reduce using rule 69 (octal -> OCTAL .)
    INT             reduce using rule 69 (octal -> OCTAL .)
    $end            reduce using rule 69 (octal -> OCTAL .)
    COMMA           reduce using rule 69 (octal -> OCTAL .)
    RIGHTSQUAREBRACKET reduce using rule 69 (octal -> OCTAL .)
    RIGHTBRACKET    reduce using rule 69 (octal -> OCTAL .)


state 52

    (59) mstring -> MSTRING .

    NEWLINE         reduce using rule 59 (mstring -> MSTRING .)
    COMMENT         reduce using rule 59 (mstring -> MSTRING .)
    LEFTSQUAREBRACKET reduce using rule 59 (mstring -> MSTRING .)
    VAR             reduce using rule 59 (mstring -> MSTRING .)
    STRING          reduce using rule 59 (mstring -> MSTRING .)
    INT             reduce using rule 59 (mstring -> MSTRING .)
    $end            reduce using rule 59 (mstring -> MSTRING .)
    COMMA           reduce using rule 59 (mstring -> MSTRING .)
    RIGHTSQUAREBRACKET reduce using rule 59 (mstring -> MSTRING .)
    RIGHTBRACKET    reduce using rule 59 (mstring -> MSTRING .)


state 53

    (62) lstring -> LITERALSTRING .

    NEWLINE         reduce using rule 62 (lstring -> LITERALSTRING .)
    COMMENT         reduce using rule 62 (lstring -> LITERALSTRING .)
    LEFTSQUAREBRACKET reduce using rule 62 (lstring -> LITERALSTRING .)
    VAR             reduce using rule 62 (lstring -> LITERALSTRING .)
    STRING          reduce using rule 62 (lstring -> LITERALSTRING .)
    INT             reduce using rule 62 (lstring -> LITERALSTRING .)
    $end            reduce using rule 62 (lstring -> LITERALSTRING .)
    COMMA           reduce using rule 62 (lstring -> LITERALSTRING .)
    RIGHTSQUAREBRACKET reduce using rule 62 (lstring -> LITERALSTRING .)
    RIGHTBRACKET    reduce using rule 62 (lstring -> LITERALSTRING .)


state 54

    (60) mlstring -> MLSTRING .

    NEWLINE         reduce using rule 60 (mlstring -> MLSTRING .)
    COMMENT         reduce using rule 60 (mlstring -> MLSTRING .)
    LEFTSQUAREBRACKET reduce using rule 60 (mlstring -> MLSTRING .)
    VAR             reduce using rule 60 (mlstring -> MLSTRING .)
    STRING          reduce using rule 60 (mlstring -> MLSTRING .)
    INT             reduce using rule 60 (mlstring -> MLSTRING .)
    $end            reduce using rule 60 (mlstring -> MLSTRING .)
    COMMA           reduce using rule 60 (mlstring -> MLSTRING .)
    RIGHTSQUAREBRACKET reduce using rule 60 (mlstring -> MLSTRING .)
    RIGHTBRACKET    reduce using rule 60 (mlstring -> MLSTRING .)


state 55

    (70) boolean -> BOOLEAN .

    NEWLINE         reduce using rule 70 (boolean -> BOOLEAN .)
    COMMENT         reduce using rule 70 (boolean -> BOOLEAN .)
    LEFTSQUAREBRACKET reduce using rule 70 (boolean -> BOOLEAN .)
    VAR             reduce using rule 70 (boolean -> BOOLEAN .)
    STRING          reduce using rule 70 (boolean -> BOOLEAN .)
    INT             reduce using rule 70 (boolean -> BOOLEAN .)
    $end            reduce using rule 70 (boolean -> BOOLEAN .)
    COMMA           reduce using rule 70 (boolean -> BOOLEAN .)
    RIGHTSQUAREBRACKET reduce using rule 70 (boolean -> BOOLEAN .)
    RIGHTBRACKET    reduce using rule 70 (boolean -> BOOLEAN .)


state 56

    (71) date -> DATE .

    NEWLINE         reduce using rule 71 (date -> DATE .)
    COMMENT         reduce using rule 71 (date -> DATE .)
    LEFTSQUAREBRACKET reduce using rule 71 (date -> DATE .)
    VAR             reduce using rule 71 (date -> DATE .)
    STRING          reduce using rule 71 (date -> DATE .)
    INT             reduce using rule 71 (date -> DATE .)
    $end            reduce using rule 71 (date -> DATE .)
    COMMA           reduce using rule 71 (date -> DATE .)
    RIGHTSQUAREBRACKET reduce using rule 71 (date -> DATE .)
    RIGHTBRACKET    reduce using rule 71 (date -> DATE .)


state 57

    (72) time -> TIME .

    NEWLINE         reduce using rule 72 (time -> TIME .)
    COMMENT         reduce using rule 72 (time -> TIME .)
    LEFTSQUAREBRACKET reduce using rule 72 (time -> TIME .)
    VAR             reduce using rule 72 (time -> TIME .)
    STRING          reduce using rule 72 (time -> TIME .)
    INT             reduce using rule 72 (time -> TIME .)
    $end            reduce using rule 72 (time -> TIME .)
    COMMA           reduce using rule 72 (time -> TIME .)
    RIGHTSQUAREBRACKET reduce using rule 72 (time -> TIME .)
    RIGHTBRACKET    reduce using rule 72 (time -> TIME .)


state 58

    (73) datetime -> DATETIME .

    NEWLINE         reduce using rule 73 (datetime -> DATETIME .)
    COMMENT         reduce using rule 73 (datetime -> DATETIME .)
    LEFTSQUAREBRACKET reduce using rule 73 (datetime -> DATETIME .)
    VAR             reduce using rule 73 (datetime -> DATETIME .)
    STRING          reduce using rule 73 (datetime -> DATETIME .)
    INT             reduce using rule 73 (datetime -> DATETIME .)
    $end            reduce using rule 73 (datetime -> DATETIME .)
    COMMA           reduce using rule 73 (datetime -> DATETIME .)
    RIGHTSQUAREBRACKET reduce using rule 73 (datetime -> DATETIME .)
    RIGHTBRACKET    reduce using rule 73 (datetime -> DATETIME .)


state 59

    (74) offset_datetime -> OFFSETDATETIME .

    NEWLINE         reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    COMMENT         reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    LEFTSQUAREBRACKET reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    VAR             reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    STRING          reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    INT             reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    $end            reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    COMMA           reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    RIGHTSQUAREBRACKET reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)
    RIGHTBRACKET    reduce using rule 74 (offset_datetime -> OFFSETDATETIME .)


state 60

    (28) lista -> LEFTSQUAREBRACKET . RIGHTSQUAREBRACKET
    (29) lista -> LEFTSQUAREBRACKET . NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> LEFTSQUAREBRACKET . lista2 RIGHTSQUAREBRACKET
    (31) lista2 -> . conteudo_lista
    (32) lista2 -> . conteudo_lista COMMA
    (33) conteudo_lista -> . elemento
    (34) conteudo_lista -> . elemento NEWLINE
    (35) conteudo_lista -> . elemento COMMA conteudo_lista
    (36) conteudo_lista -> . elemento COMMA NEWLINE conteudo_lista
    (41) elemento -> . int
    (42) elemento -> . float
    (43) elemento -> . inf
    (44) elemento -> . nan
    (45) elemento -> . hexadecimal
    (46) elemento -> . binary
    (47) elemento -> . octal
    (48) elemento -> . string
    (49) elemento -> . mstring
    (50) elemento -> . lstring
    (51) elemento -> . mlstring
    (52) elemento -> . boolean
    (53) elemento -> . date
    (54) elemento -> . time
    (55) elemento -> . datetime
    (56) elemento -> . offset_datetime
    (57) elemento -> . lista
    (58) elemento -> . object
    (63) int -> . INT
    (64) float -> . FLOAT
    (65) inf -> . INF
    (66) nan -> . NAN
    (67) hexadecimal -> . HEXADECIMAL
    (68) binary -> . BINARY
    (69) octal -> . OCTAL
    (61) string -> . STRING
    (59) mstring -> . MSTRING
    (62) lstring -> . LITERALSTRING
    (60) mlstring -> . MLSTRING
    (70) boolean -> . BOOLEAN
    (71) date -> . DATE
    (72) time -> . TIME
    (73) datetime -> . DATETIME
    (74) offset_datetime -> . OFFSETDATETIME
    (28) lista -> . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
    (29) lista -> . LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> . LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
    (37) object -> . LEFTBRACKET RIGHTBRACKET
    (38) object -> . LEFTBRACKET conteudo_object RIGHTBRACKET

    RIGHTSQUAREBRACKET shift and go to state 66
    NEWLINE         shift and go to state 67
    INT             shift and go to state 19
    FLOAT           shift and go to state 46
    INF             shift and go to state 47
    NAN             shift and go to state 48
    HEXADECIMAL     shift and go to state 49
    BINARY          shift and go to state 50
    OCTAL           shift and go to state 51
    STRING          shift and go to state 18
    MSTRING         shift and go to state 52
    LITERALSTRING   shift and go to state 53
    MLSTRING        shift and go to state 54
    BOOLEAN         shift and go to state 55
    DATE            shift and go to state 56
    TIME            shift and go to state 57
    DATETIME        shift and go to state 58
    OFFSETDATETIME  shift and go to state 59
    LEFTSQUAREBRACKET shift and go to state 60
    LEFTBRACKET     shift and go to state 61

    lista2                         shift and go to state 68
    conteudo_lista                 shift and go to state 69
    elemento                       shift and go to state 70
    int                            shift and go to state 28
    float                          shift and go to state 29
    inf                            shift and go to state 30
    nan                            shift and go to state 31
    hexadecimal                    shift and go to state 32
    binary                         shift and go to state 33
    octal                          shift and go to state 34
    string                         shift and go to state 35
    mstring                        shift and go to state 36
    lstring                        shift and go to state 37
    mlstring                       shift and go to state 38
    boolean                        shift and go to state 39
    date                           shift and go to state 40
    time                           shift and go to state 41
    datetime                       shift and go to state 42
    offset_datetime                shift and go to state 43
    lista                          shift and go to state 44
    object                         shift and go to state 45

state 61

    (37) object -> LEFTBRACKET . RIGHTBRACKET
    (38) object -> LEFTBRACKET . conteudo_object RIGHTBRACKET
    (39) conteudo_object -> . assignment_object
    (40) conteudo_object -> . assignment_object COMMA conteudo_object
    (20) assignment_object -> . name EQUAL elemento
    (21) name -> . elementoVar
    (22) name -> . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    RIGHTBRACKET    shift and go to state 71
    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    conteudo_object                shift and go to state 72
    assignment_object              shift and go to state 73
    name                           shift and go to state 74
    elementoVar                    shift and go to state 14
    string                         shift and go to state 16
    int                            shift and go to state 17

state 62

    (15) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name . RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET
    (16) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name . RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE
    (17) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name . RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT

    RIGHTSQUAREBRACKET shift and go to state 75


state 63

    (12) header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .
    (13) header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET . NEWLINE
    (14) header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET . COMMENT

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    LEFTSQUAREBRACKET reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .)
    VAR             reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .)
    STRING          reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .)
    INT             reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .)
    $end            reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .)
    NEWLINE         shift and go to state 76
    COMMENT         shift and go to state 77

  ! COMMENT         [ reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .) ]
  ! NEWLINE         [ reduce using rule 12 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET .) ]


state 64

    (23) name2 -> DOT elementoVar .
    (24) name2 -> DOT elementoVar . name2
    (23) name2 -> . DOT elementoVar
    (24) name2 -> . DOT elementoVar name2

    EQUAL           reduce using rule 23 (name2 -> DOT elementoVar .)
    RIGHTSQUAREBRACKET reduce using rule 23 (name2 -> DOT elementoVar .)
    DOT             shift and go to state 26

    name2                          shift and go to state 78

state 65

    (19) assignment -> name EQUAL elemento NEWLINE .

    COMMENT         reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)
    NEWLINE         reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)
    LEFTSQUAREBRACKET reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)
    VAR             reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)
    STRING          reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)
    INT             reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)
    $end            reduce using rule 19 (assignment -> name EQUAL elemento NEWLINE .)


state 66

    (28) lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .

    NEWLINE         reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    COMMENT         reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    LEFTSQUAREBRACKET reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    VAR             reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    STRING          reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    INT             reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    $end            reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    COMMA           reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    RIGHTSQUAREBRACKET reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    RIGHTBRACKET    reduce using rule 28 (lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .)


state 67

    (29) lista -> LEFTSQUAREBRACKET NEWLINE . lista2 RIGHTSQUAREBRACKET
    (31) lista2 -> . conteudo_lista
    (32) lista2 -> . conteudo_lista COMMA
    (33) conteudo_lista -> . elemento
    (34) conteudo_lista -> . elemento NEWLINE
    (35) conteudo_lista -> . elemento COMMA conteudo_lista
    (36) conteudo_lista -> . elemento COMMA NEWLINE conteudo_lista
    (41) elemento -> . int
    (42) elemento -> . float
    (43) elemento -> . inf
    (44) elemento -> . nan
    (45) elemento -> . hexadecimal
    (46) elemento -> . binary
    (47) elemento -> . octal
    (48) elemento -> . string
    (49) elemento -> . mstring
    (50) elemento -> . lstring
    (51) elemento -> . mlstring
    (52) elemento -> . boolean
    (53) elemento -> . date
    (54) elemento -> . time
    (55) elemento -> . datetime
    (56) elemento -> . offset_datetime
    (57) elemento -> . lista
    (58) elemento -> . object
    (63) int -> . INT
    (64) float -> . FLOAT
    (65) inf -> . INF
    (66) nan -> . NAN
    (67) hexadecimal -> . HEXADECIMAL
    (68) binary -> . BINARY
    (69) octal -> . OCTAL
    (61) string -> . STRING
    (59) mstring -> . MSTRING
    (62) lstring -> . LITERALSTRING
    (60) mlstring -> . MLSTRING
    (70) boolean -> . BOOLEAN
    (71) date -> . DATE
    (72) time -> . TIME
    (73) datetime -> . DATETIME
    (74) offset_datetime -> . OFFSETDATETIME
    (28) lista -> . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
    (29) lista -> . LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> . LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
    (37) object -> . LEFTBRACKET RIGHTBRACKET
    (38) object -> . LEFTBRACKET conteudo_object RIGHTBRACKET

    INT             shift and go to state 19
    FLOAT           shift and go to state 46
    INF             shift and go to state 47
    NAN             shift and go to state 48
    HEXADECIMAL     shift and go to state 49
    BINARY          shift and go to state 50
    OCTAL           shift and go to state 51
    STRING          shift and go to state 18
    MSTRING         shift and go to state 52
    LITERALSTRING   shift and go to state 53
    MLSTRING        shift and go to state 54
    BOOLEAN         shift and go to state 55
    DATE            shift and go to state 56
    TIME            shift and go to state 57
    DATETIME        shift and go to state 58
    OFFSETDATETIME  shift and go to state 59
    LEFTSQUAREBRACKET shift and go to state 60
    LEFTBRACKET     shift and go to state 61

    lista2                         shift and go to state 79
    conteudo_lista                 shift and go to state 69
    elemento                       shift and go to state 70
    int                            shift and go to state 28
    float                          shift and go to state 29
    inf                            shift and go to state 30
    nan                            shift and go to state 31
    hexadecimal                    shift and go to state 32
    binary                         shift and go to state 33
    octal                          shift and go to state 34
    string                         shift and go to state 35
    mstring                        shift and go to state 36
    lstring                        shift and go to state 37
    mlstring                       shift and go to state 38
    boolean                        shift and go to state 39
    date                           shift and go to state 40
    time                           shift and go to state 41
    datetime                       shift and go to state 42
    offset_datetime                shift and go to state 43
    lista                          shift and go to state 44
    object                         shift and go to state 45

state 68

    (30) lista -> LEFTSQUAREBRACKET lista2 . RIGHTSQUAREBRACKET

    RIGHTSQUAREBRACKET shift and go to state 80


state 69

    (31) lista2 -> conteudo_lista .
    (32) lista2 -> conteudo_lista . COMMA

    RIGHTSQUAREBRACKET reduce using rule 31 (lista2 -> conteudo_lista .)
    COMMA           shift and go to state 81


state 70

    (33) conteudo_lista -> elemento .
    (34) conteudo_lista -> elemento . NEWLINE
    (35) conteudo_lista -> elemento . COMMA conteudo_lista
    (36) conteudo_lista -> elemento . COMMA NEWLINE conteudo_lista

  ! shift/reduce conflict for COMMA resolved as shift
    RIGHTSQUAREBRACKET reduce using rule 33 (conteudo_lista -> elemento .)
    NEWLINE         shift and go to state 82
    COMMA           shift and go to state 83

  ! COMMA           [ reduce using rule 33 (conteudo_lista -> elemento .) ]


state 71

    (37) object -> LEFTBRACKET RIGHTBRACKET .

    NEWLINE         reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    COMMENT         reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    LEFTSQUAREBRACKET reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    VAR             reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    STRING          reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    INT             reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    $end            reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    COMMA           reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTSQUAREBRACKET reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 37 (object -> LEFTBRACKET RIGHTBRACKET .)


state 72

    (38) object -> LEFTBRACKET conteudo_object . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 84


state 73

    (39) conteudo_object -> assignment_object .
    (40) conteudo_object -> assignment_object . COMMA conteudo_object

    RIGHTBRACKET    reduce using rule 39 (conteudo_object -> assignment_object .)
    COMMA           shift and go to state 85


state 74

    (20) assignment_object -> name . EQUAL elemento

    EQUAL           shift and go to state 86


state 75

    (15) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET . RIGHTSQUAREBRACKET
    (16) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET . RIGHTSQUAREBRACKET NEWLINE
    (17) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET . RIGHTSQUAREBRACKET COMMENT

    RIGHTSQUAREBRACKET shift and go to state 87


state 76

    (13) header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .

    COMMENT         reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)
    NEWLINE         reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)
    LEFTSQUAREBRACKET reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)
    VAR             reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)
    STRING          reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)
    INT             reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)
    $end            reduce using rule 13 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE .)


state 77

    (14) header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .

    COMMENT         reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)
    NEWLINE         reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)
    LEFTSQUAREBRACKET reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)
    VAR             reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)
    STRING          reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)
    INT             reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)
    $end            reduce using rule 14 (header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT .)


state 78

    (24) name2 -> DOT elementoVar name2 .

    EQUAL           reduce using rule 24 (name2 -> DOT elementoVar name2 .)
    RIGHTSQUAREBRACKET reduce using rule 24 (name2 -> DOT elementoVar name2 .)


state 79

    (29) lista -> LEFTSQUAREBRACKET NEWLINE lista2 . RIGHTSQUAREBRACKET

    RIGHTSQUAREBRACKET shift and go to state 88


state 80

    (30) lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .

    NEWLINE         reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    COMMENT         reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    LEFTSQUAREBRACKET reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    VAR             reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    STRING          reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    INT             reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    $end            reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    COMMA           reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    RIGHTSQUAREBRACKET reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)
    RIGHTBRACKET    reduce using rule 30 (lista -> LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET .)


state 81

    (32) lista2 -> conteudo_lista COMMA .

    RIGHTSQUAREBRACKET reduce using rule 32 (lista2 -> conteudo_lista COMMA .)


state 82

    (34) conteudo_lista -> elemento NEWLINE .

    COMMA           reduce using rule 34 (conteudo_lista -> elemento NEWLINE .)
    RIGHTSQUAREBRACKET reduce using rule 34 (conteudo_lista -> elemento NEWLINE .)


state 83

    (35) conteudo_lista -> elemento COMMA . conteudo_lista
    (36) conteudo_lista -> elemento COMMA . NEWLINE conteudo_lista
    (33) conteudo_lista -> . elemento
    (34) conteudo_lista -> . elemento NEWLINE
    (35) conteudo_lista -> . elemento COMMA conteudo_lista
    (36) conteudo_lista -> . elemento COMMA NEWLINE conteudo_lista
    (41) elemento -> . int
    (42) elemento -> . float
    (43) elemento -> . inf
    (44) elemento -> . nan
    (45) elemento -> . hexadecimal
    (46) elemento -> . binary
    (47) elemento -> . octal
    (48) elemento -> . string
    (49) elemento -> . mstring
    (50) elemento -> . lstring
    (51) elemento -> . mlstring
    (52) elemento -> . boolean
    (53) elemento -> . date
    (54) elemento -> . time
    (55) elemento -> . datetime
    (56) elemento -> . offset_datetime
    (57) elemento -> . lista
    (58) elemento -> . object
    (63) int -> . INT
    (64) float -> . FLOAT
    (65) inf -> . INF
    (66) nan -> . NAN
    (67) hexadecimal -> . HEXADECIMAL
    (68) binary -> . BINARY
    (69) octal -> . OCTAL
    (61) string -> . STRING
    (59) mstring -> . MSTRING
    (62) lstring -> . LITERALSTRING
    (60) mlstring -> . MLSTRING
    (70) boolean -> . BOOLEAN
    (71) date -> . DATE
    (72) time -> . TIME
    (73) datetime -> . DATETIME
    (74) offset_datetime -> . OFFSETDATETIME
    (28) lista -> . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
    (29) lista -> . LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> . LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
    (37) object -> . LEFTBRACKET RIGHTBRACKET
    (38) object -> . LEFTBRACKET conteudo_object RIGHTBRACKET

    NEWLINE         shift and go to state 90
    INT             shift and go to state 19
    FLOAT           shift and go to state 46
    INF             shift and go to state 47
    NAN             shift and go to state 48
    HEXADECIMAL     shift and go to state 49
    BINARY          shift and go to state 50
    OCTAL           shift and go to state 51
    STRING          shift and go to state 18
    MSTRING         shift and go to state 52
    LITERALSTRING   shift and go to state 53
    MLSTRING        shift and go to state 54
    BOOLEAN         shift and go to state 55
    DATE            shift and go to state 56
    TIME            shift and go to state 57
    DATETIME        shift and go to state 58
    OFFSETDATETIME  shift and go to state 59
    LEFTSQUAREBRACKET shift and go to state 60
    LEFTBRACKET     shift and go to state 61

    elemento                       shift and go to state 70
    conteudo_lista                 shift and go to state 89
    int                            shift and go to state 28
    float                          shift and go to state 29
    inf                            shift and go to state 30
    nan                            shift and go to state 31
    hexadecimal                    shift and go to state 32
    binary                         shift and go to state 33
    octal                          shift and go to state 34
    string                         shift and go to state 35
    mstring                        shift and go to state 36
    lstring                        shift and go to state 37
    mlstring                       shift and go to state 38
    boolean                        shift and go to state 39
    date                           shift and go to state 40
    time                           shift and go to state 41
    datetime                       shift and go to state 42
    offset_datetime                shift and go to state 43
    lista                          shift and go to state 44
    object                         shift and go to state 45

state 84

    (38) object -> LEFTBRACKET conteudo_object RIGHTBRACKET .

    NEWLINE         reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    COMMENT         reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    LEFTSQUAREBRACKET reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    VAR             reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    STRING          reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    INT             reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    $end            reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    COMMA           reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    RIGHTSQUAREBRACKET reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 38 (object -> LEFTBRACKET conteudo_object RIGHTBRACKET .)


state 85

    (40) conteudo_object -> assignment_object COMMA . conteudo_object
    (39) conteudo_object -> . assignment_object
    (40) conteudo_object -> . assignment_object COMMA conteudo_object
    (20) assignment_object -> . name EQUAL elemento
    (21) name -> . elementoVar
    (22) name -> . elementoVar name2
    (25) elementoVar -> . VAR
    (26) elementoVar -> . string
    (27) elementoVar -> . int
    (61) string -> . STRING
    (63) int -> . INT

    VAR             shift and go to state 15
    STRING          shift and go to state 18
    INT             shift and go to state 19

    assignment_object              shift and go to state 73
    conteudo_object                shift and go to state 91
    name                           shift and go to state 74
    elementoVar                    shift and go to state 14
    string                         shift and go to state 16
    int                            shift and go to state 17

state 86

    (20) assignment_object -> name EQUAL . elemento
    (41) elemento -> . int
    (42) elemento -> . float
    (43) elemento -> . inf
    (44) elemento -> . nan
    (45) elemento -> . hexadecimal
    (46) elemento -> . binary
    (47) elemento -> . octal
    (48) elemento -> . string
    (49) elemento -> . mstring
    (50) elemento -> . lstring
    (51) elemento -> . mlstring
    (52) elemento -> . boolean
    (53) elemento -> . date
    (54) elemento -> . time
    (55) elemento -> . datetime
    (56) elemento -> . offset_datetime
    (57) elemento -> . lista
    (58) elemento -> . object
    (63) int -> . INT
    (64) float -> . FLOAT
    (65) inf -> . INF
    (66) nan -> . NAN
    (67) hexadecimal -> . HEXADECIMAL
    (68) binary -> . BINARY
    (69) octal -> . OCTAL
    (61) string -> . STRING
    (59) mstring -> . MSTRING
    (62) lstring -> . LITERALSTRING
    (60) mlstring -> . MLSTRING
    (70) boolean -> . BOOLEAN
    (71) date -> . DATE
    (72) time -> . TIME
    (73) datetime -> . DATETIME
    (74) offset_datetime -> . OFFSETDATETIME
    (28) lista -> . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
    (29) lista -> . LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> . LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
    (37) object -> . LEFTBRACKET RIGHTBRACKET
    (38) object -> . LEFTBRACKET conteudo_object RIGHTBRACKET

    INT             shift and go to state 19
    FLOAT           shift and go to state 46
    INF             shift and go to state 47
    NAN             shift and go to state 48
    HEXADECIMAL     shift and go to state 49
    BINARY          shift and go to state 50
    OCTAL           shift and go to state 51
    STRING          shift and go to state 18
    MSTRING         shift and go to state 52
    LITERALSTRING   shift and go to state 53
    MLSTRING        shift and go to state 54
    BOOLEAN         shift and go to state 55
    DATE            shift and go to state 56
    TIME            shift and go to state 57
    DATETIME        shift and go to state 58
    OFFSETDATETIME  shift and go to state 59
    LEFTSQUAREBRACKET shift and go to state 60
    LEFTBRACKET     shift and go to state 61

    elemento                       shift and go to state 92
    int                            shift and go to state 28
    float                          shift and go to state 29
    inf                            shift and go to state 30
    nan                            shift and go to state 31
    hexadecimal                    shift and go to state 32
    binary                         shift and go to state 33
    octal                          shift and go to state 34
    string                         shift and go to state 35
    mstring                        shift and go to state 36
    lstring                        shift and go to state 37
    mlstring                       shift and go to state 38
    boolean                        shift and go to state 39
    date                           shift and go to state 40
    time                           shift and go to state 41
    datetime                       shift and go to state 42
    offset_datetime                shift and go to state 43
    lista                          shift and go to state 44
    object                         shift and go to state 45

state 87

    (15) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .
    (16) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET . NEWLINE
    (17) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET . COMMENT

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    LEFTSQUAREBRACKET reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    VAR             reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    STRING          reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    INT             reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    $end            reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .)
    NEWLINE         shift and go to state 93
    COMMENT         shift and go to state 94

  ! COMMENT         [ reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .) ]
  ! NEWLINE         [ reduce using rule 15 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET .) ]


state 88

    (29) lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .

    NEWLINE         reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    COMMENT         reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    LEFTSQUAREBRACKET reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    VAR             reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    STRING          reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    INT             reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    $end            reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    COMMA           reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    RIGHTSQUAREBRACKET reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)
    RIGHTBRACKET    reduce using rule 29 (lista -> LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET .)


state 89

    (35) conteudo_lista -> elemento COMMA conteudo_lista .

    COMMA           reduce using rule 35 (conteudo_lista -> elemento COMMA conteudo_lista .)
    RIGHTSQUAREBRACKET reduce using rule 35 (conteudo_lista -> elemento COMMA conteudo_lista .)


state 90

    (36) conteudo_lista -> elemento COMMA NEWLINE . conteudo_lista
    (33) conteudo_lista -> . elemento
    (34) conteudo_lista -> . elemento NEWLINE
    (35) conteudo_lista -> . elemento COMMA conteudo_lista
    (36) conteudo_lista -> . elemento COMMA NEWLINE conteudo_lista
    (41) elemento -> . int
    (42) elemento -> . float
    (43) elemento -> . inf
    (44) elemento -> . nan
    (45) elemento -> . hexadecimal
    (46) elemento -> . binary
    (47) elemento -> . octal
    (48) elemento -> . string
    (49) elemento -> . mstring
    (50) elemento -> . lstring
    (51) elemento -> . mlstring
    (52) elemento -> . boolean
    (53) elemento -> . date
    (54) elemento -> . time
    (55) elemento -> . datetime
    (56) elemento -> . offset_datetime
    (57) elemento -> . lista
    (58) elemento -> . object
    (63) int -> . INT
    (64) float -> . FLOAT
    (65) inf -> . INF
    (66) nan -> . NAN
    (67) hexadecimal -> . HEXADECIMAL
    (68) binary -> . BINARY
    (69) octal -> . OCTAL
    (61) string -> . STRING
    (59) mstring -> . MSTRING
    (62) lstring -> . LITERALSTRING
    (60) mlstring -> . MLSTRING
    (70) boolean -> . BOOLEAN
    (71) date -> . DATE
    (72) time -> . TIME
    (73) datetime -> . DATETIME
    (74) offset_datetime -> . OFFSETDATETIME
    (28) lista -> . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET
    (29) lista -> . LEFTSQUAREBRACKET NEWLINE lista2 RIGHTSQUAREBRACKET
    (30) lista -> . LEFTSQUAREBRACKET lista2 RIGHTSQUAREBRACKET
    (37) object -> . LEFTBRACKET RIGHTBRACKET
    (38) object -> . LEFTBRACKET conteudo_object RIGHTBRACKET

    INT             shift and go to state 19
    FLOAT           shift and go to state 46
    INF             shift and go to state 47
    NAN             shift and go to state 48
    HEXADECIMAL     shift and go to state 49
    BINARY          shift and go to state 50
    OCTAL           shift and go to state 51
    STRING          shift and go to state 18
    MSTRING         shift and go to state 52
    LITERALSTRING   shift and go to state 53
    MLSTRING        shift and go to state 54
    BOOLEAN         shift and go to state 55
    DATE            shift and go to state 56
    TIME            shift and go to state 57
    DATETIME        shift and go to state 58
    OFFSETDATETIME  shift and go to state 59
    LEFTSQUAREBRACKET shift and go to state 60
    LEFTBRACKET     shift and go to state 61

    elemento                       shift and go to state 70
    conteudo_lista                 shift and go to state 95
    int                            shift and go to state 28
    float                          shift and go to state 29
    inf                            shift and go to state 30
    nan                            shift and go to state 31
    hexadecimal                    shift and go to state 32
    binary                         shift and go to state 33
    octal                          shift and go to state 34
    string                         shift and go to state 35
    mstring                        shift and go to state 36
    lstring                        shift and go to state 37
    mlstring                       shift and go to state 38
    boolean                        shift and go to state 39
    date                           shift and go to state 40
    time                           shift and go to state 41
    datetime                       shift and go to state 42
    offset_datetime                shift and go to state 43
    lista                          shift and go to state 44
    object                         shift and go to state 45

state 91

    (40) conteudo_object -> assignment_object COMMA conteudo_object .

    RIGHTBRACKET    reduce using rule 40 (conteudo_object -> assignment_object COMMA conteudo_object .)


state 92

    (20) assignment_object -> name EQUAL elemento .

    COMMA           reduce using rule 20 (assignment_object -> name EQUAL elemento .)
    RIGHTBRACKET    reduce using rule 20 (assignment_object -> name EQUAL elemento .)


state 93

    (16) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .

    COMMENT         reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)
    NEWLINE         reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)
    LEFTSQUAREBRACKET reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)
    VAR             reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)
    STRING          reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)
    INT             reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)
    $end            reduce using rule 16 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE .)


state 94

    (17) header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .

    COMMENT         reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)
    NEWLINE         reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)
    LEFTSQUAREBRACKET reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)
    VAR             reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)
    STRING          reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)
    INT             reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)
    $end            reduce using rule 17 (header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT .)


state 95

    (36) conteudo_lista -> elemento COMMA NEWLINE conteudo_lista .

    COMMA           reduce using rule 36 (conteudo_lista -> elemento COMMA NEWLINE conteudo_lista .)
    RIGHTSQUAREBRACKET reduce using rule 36 (conteudo_lista -> elemento COMMA NEWLINE conteudo_lista .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 27 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 87 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 87 resolved as shift
