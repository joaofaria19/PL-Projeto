
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBINARY BOOLEAN COMMA COMMENT DATE DATETIME DOT EQUAL FLOAT HEXADECIMAL INF INT LEFTBRACKET LEFTSQUAREBRACKET MSTRING NAN NEWLINE OCTAL OFFSET OFFSETDATETIME RIGHTBRACKET RIGHTSQUAREBRACKET STRING TIME VAR\n    program : statements\n    \n        statements : statement\n                | statement statements\n    \n        statement : table\n                | assignment\n                | comment\n                | newline\n    \n        newline : NEWLINE\n    \n        comment : COMMENT\n    \n        table : header1\n            | header2 \n    \n        header1 : LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET \n            | LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE\n            | LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT\n    \n        header2 : LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET \n            | LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE\n            | LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT\n    \n    \n        assignment : name EQUAL elemento \n                | name EQUAL elemento NEWLINE\n    \n        assignment_object : name EQUAL elemento\n    \n        name : elementoVar\n            | elementoVar name2\n    \n        name2 : DOT elementoVar\n            | DOT elementoVar name2\n    \n        elementoVar : VAR\n                    | string\n                    | int\n    \n        lista : LEFTSQUAREBRACKET RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET conteudo_lista RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET conteudo_lista COMMA RIGHTSQUAREBRACKET     \n    \n        conteudo_lista : elemento \n                    | elemento COMMA conteudo_lista\n    \n        object : LEFTBRACKET RIGHTBRACKET\n                | LEFTBRACKET conteudo_object RIGHTBRACKET\n    \n        conteudo_object : assignment_object\n                | assignment_object COMMA conteudo_object\n    \n        elemento : int\n             | float\n             | inf\n             | nan\n             | hexadecimal\n             | binary\n             | octal\n             | string\n             | mstring\n             | boolean\n             | date\n             | time\n             | datetime\n             | offset_datetime\n             | lista\n             | object\n    \n        mstring : MSTRING\n    \n        string : STRING\n    \n        int : INT\n    \n        float : FLOAT\n    \n        inf : INF\n    \n        nan : NAN\n    \n        hexadecimal : HEXADECIMAL\n    \n        binary : BINARY\n    \n        octal : OCTAL\n    \n        boolean : BOOLEAN\n    \n        date : DATE\n    \n        time : TIME\n    \n        datetime : DATETIME\n    \n        offset_datetime : OFFSETDATETIME\n    '
    
_lr_action_items = {'COMMENT':([0,3,4,5,6,7,8,9,11,12,18,19,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,60,61,64,69,70,72,75,78,79,83,84,],[12,12,-4,-5,-6,-7,-10,-11,-8,-9,-54,-55,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,70,-19,-28,-33,-13,-14,-29,-34,84,-30,-16,-17,]),'NEWLINE':([0,3,4,5,6,7,8,9,11,12,18,19,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,60,61,64,69,70,72,75,78,79,83,84,],[11,11,-4,-5,-6,-7,-10,-11,-8,-9,-54,-55,60,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,69,-19,-28,-33,-13,-14,-29,-34,83,-30,-16,-17,]),'LEFTSQUAREBRACKET':([0,3,4,5,6,7,8,9,11,12,13,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,64,69,70,72,74,75,77,78,79,83,84,],[13,13,-4,-5,-6,-7,-10,-11,-8,-9,22,-54,-55,55,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,55,-12,-19,-28,-33,-13,-14,-29,55,-34,55,-15,-30,-16,-17,]),'VAR':([0,3,4,5,6,7,8,9,11,12,13,18,19,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,60,61,64,69,70,72,75,76,78,79,83,84,],[15,15,-4,-5,-6,-7,-10,-11,-8,-9,15,-54,-55,15,15,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,15,-12,-19,-28,-33,-13,-14,-29,-34,15,-15,-30,-16,-17,]),'STRING':([0,3,4,5,6,7,8,9,11,12,13,18,19,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,64,69,70,72,74,75,76,77,78,79,83,84,],[18,18,-4,-5,-6,-7,-10,-11,-8,-9,18,-54,-55,18,18,18,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,18,18,-12,-19,-28,-33,-13,-14,-29,18,-34,18,18,-15,-30,-16,-17,]),'INT':([0,3,4,5,6,7,8,9,11,12,13,18,19,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,64,69,70,72,74,75,76,77,78,79,83,84,],[19,19,-4,-5,-6,-7,-10,-11,-8,-9,19,-54,-55,19,19,19,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,19,19,-12,-19,-28,-33,-13,-14,-29,19,-34,19,19,-15,-30,-16,-17,]),'$end':([1,2,3,4,5,6,7,8,9,11,12,18,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,60,61,64,69,70,72,75,78,79,83,84,],[0,-1,-2,-4,-5,-6,-7,-10,-11,-8,-9,-54,-55,-3,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,-12,-19,-28,-33,-13,-14,-29,-34,-15,-30,-16,-17,]),'EQUAL':([10,14,15,16,17,18,19,24,59,67,71,],[21,-21,-25,-26,-27,-54,-55,-22,-23,77,-24,]),'RIGHTSQUAREBRACKET':([14,15,16,17,18,19,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,59,61,62,63,64,68,71,72,73,75,79,80,],[-21,-25,-26,-27,-54,-55,58,-22,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,61,68,-23,-28,72,-31,-33,78,-24,-29,79,-34,-30,-32,]),'DOT':([14,15,16,17,18,19,59,],[25,-25,-26,-27,-54,-55,25,]),'COMMA':([18,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,61,62,63,64,66,72,75,79,80,82,],[-54,-55,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,-28,73,74,-33,76,-29,-34,-30,-32,-20,]),'RIGHTBRACKET':([18,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,61,64,65,66,72,75,79,81,82,],[-54,-55,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-53,-62,-63,-64,-65,-66,64,-28,-33,75,-35,-29,-34,-30,-36,-20,]),'FLOAT':([21,55,74,77,],[43,43,43,43,]),'INF':([21,55,74,77,],[44,44,44,44,]),'NAN':([21,55,74,77,],[45,45,45,45,]),'HEXADECIMAL':([21,55,74,77,],[46,46,46,46,]),'BINARY':([21,55,74,77,],[47,47,47,47,]),'OCTAL':([21,55,74,77,],[48,48,48,48,]),'MSTRING':([21,55,74,77,],[49,49,49,49,]),'BOOLEAN':([21,55,74,77,],[50,50,50,50,]),'DATE':([21,55,74,77,],[51,51,51,51,]),'TIME':([21,55,74,77,],[52,52,52,52,]),'DATETIME':([21,55,74,77,],[53,53,53,53,]),'OFFSETDATETIME':([21,55,74,77,],[54,54,54,54,]),'LEFTBRACKET':([21,55,74,77,],[56,56,56,56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,],[2,20,]),'statement':([0,3,],[3,3,]),'table':([0,3,],[4,4,]),'assignment':([0,3,],[5,5,]),'comment':([0,3,],[6,6,]),'newline':([0,3,],[7,7,]),'header1':([0,3,],[8,8,]),'header2':([0,3,],[9,9,]),'name':([0,3,13,22,56,76,],[10,10,23,57,67,67,]),'elementoVar':([0,3,13,22,25,56,76,],[14,14,14,14,59,14,14,]),'string':([0,3,13,21,22,25,55,56,74,76,77,],[16,16,16,34,16,16,34,16,34,16,34,]),'int':([0,3,13,21,22,25,55,56,74,76,77,],[17,17,17,27,17,17,27,17,27,17,27,]),'name2':([14,59,],[24,71,]),'elemento':([21,55,74,77,],[26,63,63,82,]),'float':([21,55,74,77,],[28,28,28,28,]),'inf':([21,55,74,77,],[29,29,29,29,]),'nan':([21,55,74,77,],[30,30,30,30,]),'hexadecimal':([21,55,74,77,],[31,31,31,31,]),'binary':([21,55,74,77,],[32,32,32,32,]),'octal':([21,55,74,77,],[33,33,33,33,]),'mstring':([21,55,74,77,],[35,35,35,35,]),'boolean':([21,55,74,77,],[36,36,36,36,]),'date':([21,55,74,77,],[37,37,37,37,]),'time':([21,55,74,77,],[38,38,38,38,]),'datetime':([21,55,74,77,],[39,39,39,39,]),'offset_datetime':([21,55,74,77,],[40,40,40,40,]),'lista':([21,55,74,77,],[41,41,41,41,]),'object':([21,55,74,77,],[42,42,42,42,]),'conteudo_lista':([55,74,],[62,80,]),'conteudo_object':([56,76,],[65,81,]),'assignment_object':([56,76,],[66,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analisador_sintatico.py',13),
  ('statements -> statement','statements',1,'p_statements','analisador_sintatico.py',24),
  ('statements -> statement statements','statements',2,'p_statements','analisador_sintatico.py',25),
  ('statement -> table','statement',1,'p_statement','analisador_sintatico.py',62),
  ('statement -> assignment','statement',1,'p_statement','analisador_sintatico.py',63),
  ('statement -> comment','statement',1,'p_statement','analisador_sintatico.py',64),
  ('statement -> newline','statement',1,'p_statement','analisador_sintatico.py',65),
  ('newline -> NEWLINE','newline',1,'p_newline','analisador_sintatico.py',71),
  ('comment -> COMMENT','comment',1,'p_comment','analisador_sintatico.py',77),
  ('table -> header1','table',1,'p_table','analisador_sintatico.py',83),
  ('table -> header2','table',1,'p_table','analisador_sintatico.py',84),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET','header1',3,'p_header1','analisador_sintatico.py',90),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE','header1',4,'p_header1','analisador_sintatico.py',91),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT','header1',4,'p_header1','analisador_sintatico.py',92),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET','header2',5,'p_header2','analisador_sintatico.py',105),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE','header2',6,'p_header2','analisador_sintatico.py',106),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT','header2',6,'p_header2','analisador_sintatico.py',107),
  ('assignment -> name EQUAL elemento','assignment',3,'p_assignment','analisador_sintatico.py',121),
  ('assignment -> name EQUAL elemento NEWLINE','assignment',4,'p_assignment','analisador_sintatico.py',122),
  ('assignment_object -> name EQUAL elemento','assignment_object',3,'p_assignment_object','analisador_sintatico.py',136),
  ('name -> elementoVar','name',1,'p_name','analisador_sintatico.py',142),
  ('name -> elementoVar name2','name',2,'p_name','analisador_sintatico.py',143),
  ('name2 -> DOT elementoVar','name2',2,'p_name2','analisador_sintatico.py',152),
  ('name2 -> DOT elementoVar name2','name2',3,'p_name2','analisador_sintatico.py',153),
  ('elementoVar -> VAR','elementoVar',1,'p_elemento_var','analisador_sintatico.py',162),
  ('elementoVar -> string','elementoVar',1,'p_elemento_var','analisador_sintatico.py',163),
  ('elementoVar -> int','elementoVar',1,'p_elemento_var','analisador_sintatico.py',164),
  ('lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET','lista',2,'p_lista','analisador_sintatico.py',170),
  ('lista -> LEFTSQUAREBRACKET conteudo_lista RIGHTSQUAREBRACKET','lista',3,'p_lista','analisador_sintatico.py',171),
  ('lista -> LEFTSQUAREBRACKET conteudo_lista COMMA RIGHTSQUAREBRACKET','lista',4,'p_lista','analisador_sintatico.py',172),
  ('conteudo_lista -> elemento','conteudo_lista',1,'p_conteudo_lista','analisador_sintatico.py',181),
  ('conteudo_lista -> elemento COMMA conteudo_lista','conteudo_lista',3,'p_conteudo_lista','analisador_sintatico.py',182),
  ('object -> LEFTBRACKET RIGHTBRACKET','object',2,'p_object','analisador_sintatico.py',191),
  ('object -> LEFTBRACKET conteudo_object RIGHTBRACKET','object',3,'p_object','analisador_sintatico.py',192),
  ('conteudo_object -> assignment_object','conteudo_object',1,'p_conteudo_object','analisador_sintatico.py',201),
  ('conteudo_object -> assignment_object COMMA conteudo_object','conteudo_object',3,'p_conteudo_object','analisador_sintatico.py',202),
  ('elemento -> int','elemento',1,'p_elemento','analisador_sintatico.py',211),
  ('elemento -> float','elemento',1,'p_elemento','analisador_sintatico.py',212),
  ('elemento -> inf','elemento',1,'p_elemento','analisador_sintatico.py',213),
  ('elemento -> nan','elemento',1,'p_elemento','analisador_sintatico.py',214),
  ('elemento -> hexadecimal','elemento',1,'p_elemento','analisador_sintatico.py',215),
  ('elemento -> binary','elemento',1,'p_elemento','analisador_sintatico.py',216),
  ('elemento -> octal','elemento',1,'p_elemento','analisador_sintatico.py',217),
  ('elemento -> string','elemento',1,'p_elemento','analisador_sintatico.py',218),
  ('elemento -> mstring','elemento',1,'p_elemento','analisador_sintatico.py',219),
  ('elemento -> boolean','elemento',1,'p_elemento','analisador_sintatico.py',220),
  ('elemento -> date','elemento',1,'p_elemento','analisador_sintatico.py',221),
  ('elemento -> time','elemento',1,'p_elemento','analisador_sintatico.py',222),
  ('elemento -> datetime','elemento',1,'p_elemento','analisador_sintatico.py',223),
  ('elemento -> offset_datetime','elemento',1,'p_elemento','analisador_sintatico.py',224),
  ('elemento -> lista','elemento',1,'p_elemento','analisador_sintatico.py',225),
  ('elemento -> object','elemento',1,'p_elemento','analisador_sintatico.py',226),
  ('mstring -> MSTRING','mstring',1,'p_mstring','analisador_sintatico.py',232),
  ('string -> STRING','string',1,'p_string','analisador_sintatico.py',238),
  ('int -> INT','int',1,'p_number','analisador_sintatico.py',244),
  ('float -> FLOAT','float',1,'p_float','analisador_sintatico.py',250),
  ('inf -> INF','inf',1,'p_inf','analisador_sintatico.py',256),
  ('nan -> NAN','nan',1,'p_nan','analisador_sintatico.py',262),
  ('hexadecimal -> HEXADECIMAL','hexadecimal',1,'p_hexadecimal','analisador_sintatico.py',268),
  ('binary -> BINARY','binary',1,'p_binary','analisador_sintatico.py',274),
  ('octal -> OCTAL','octal',1,'p_octal','analisador_sintatico.py',280),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','analisador_sintatico.py',286),
  ('date -> DATE','date',1,'p_date','analisador_sintatico.py',292),
  ('time -> TIME','time',1,'p_time','analisador_sintatico.py',298),
  ('datetime -> DATETIME','datetime',1,'p_datetime','analisador_sintatico.py',304),
  ('offset_datetime -> OFFSETDATETIME','offset_datetime',1,'p_offset_datetime','analisador_sintatico.py',310),
]
