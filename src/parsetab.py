
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBINARY BOOLEAN COMMA COMMENT DATE DATETIME DOT EQUAL FLOAT HEXADECIMAL INF INT LEFTBRACKET LEFTSQUAREBRACKET LITERALSTRING MLSTRING MSTRING NAN NEWLINE OCTAL OFFSET OFFSETDATETIME RIGHTBRACKET RIGHTSQUAREBRACKET STRING TIME VAR\n    program : statements\n    \n        statements : statement\n                | statement statements\n    \n        statement : table\n                | assignment\n                | comment\n                | newline\n    \n        newline : NEWLINE\n    \n        comment : COMMENT NEWLINE\n    \n        table : header1\n            | header2 \n    \n        header1 : LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET \n            | LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE\n            | LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT\n    \n        header2 : LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET \n            | LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE\n            | LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT\n    \n    \n        assignment : name EQUAL elemento \n                | name EQUAL elemento NEWLINE\n    \n        assignment_object : name EQUAL elemento \n    \n        name : elementoVar\n            | elementoVar name2\n    \n        name2 : DOT elementoVar\n            | DOT elementoVar name2\n    \n        elementoVar : VAR\n                    | string\n    \n        lista : LEFTSQUAREBRACKET RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET conteudo_lista RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET conteudo_lista COMMA RIGHTSQUAREBRACKET     \n    \n        conteudo_lista : elemento\n                | elemento COMMA conteudo_lista\n    \n        object : LEFTBRACKET RIGHTBRACKET\n                | LEFTBRACKET conteudo_object RIGHTBRACKET\n    \n        conteudo_object : assignment_object\n                | assignment_object COMMA conteudo_object\n    \n        elemento : int\n             | float\n             | inf\n             | nan\n             | hexadecimal\n             | binary\n             | octal\n             | string\n             | mstring\n             | lstring\n             | mlstring\n             | boolean\n             | date\n             | time\n             | datetime\n             | offset_datetime\n             | lista\n             | object\n    \n        mstring : MSTRING\n    \n        mlstring : MLSTRING\n    \n        string : STRING\n    \n        lstring : LITERALSTRING\n    \n        int : INT\n    \n        float : FLOAT\n    \n        inf : INF\n    \n        nan : NAN\n    \n        hexadecimal : HEXADECIMAL\n    \n        binary : BINARY\n    \n        octal : OCTAL\n    \n        boolean : BOOLEAN\n    \n        date : DATE\n    \n        time : TIME\n    \n        datetime : DATETIME\n    \n        offset_datetime : OFFSETDATETIME\n    '
    
_lr_action_items = {'COMMENT':([0,3,4,5,6,7,8,9,11,17,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,64,65,68,73,74,76,79,82,83,87,88,],[12,12,-4,-5,-6,-7,-10,-11,-8,-56,-9,-18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,74,-19,-27,-32,-13,-14,-28,-33,88,-29,-16,-17,]),'NEWLINE':([0,3,4,5,6,7,8,9,11,12,17,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,64,65,68,73,74,76,79,82,83,87,88,],[11,11,-4,-5,-6,-7,-10,-11,-8,20,-56,-9,64,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,73,-19,-27,-32,-13,-14,-28,-33,87,-29,-16,-17,]),'LEFTSQUAREBRACKET':([0,3,4,5,6,7,8,9,11,13,17,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,64,65,68,73,74,76,78,79,81,82,83,87,88,],[13,13,-4,-5,-6,-7,-10,-11,-8,21,-56,59,-9,-18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,59,-12,-19,-27,-32,-13,-14,-28,59,-33,59,-15,-29,-16,-17,]),'VAR':([0,3,4,5,6,7,8,9,11,13,17,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,62,64,65,68,73,74,76,79,80,82,83,87,88,],[15,15,-4,-5,-6,-7,-10,-11,-8,15,-56,-9,15,15,-18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,15,-12,-19,-27,-32,-13,-14,-28,-33,15,-15,-29,-16,-17,]),'STRING':([0,3,4,5,6,7,8,9,11,13,17,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,68,73,74,76,78,79,80,81,82,83,87,88,],[17,17,-4,-5,-6,-7,-10,-11,-8,17,-56,17,-9,17,17,-18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,17,17,-12,-19,-27,-32,-13,-14,-28,17,-33,17,17,-15,-29,-16,-17,]),'$end':([1,2,3,4,5,6,7,8,9,11,17,18,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,64,65,68,73,74,76,79,82,83,87,88,],[0,-1,-2,-4,-5,-6,-7,-10,-11,-8,-56,-3,-9,-18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,-12,-19,-27,-32,-13,-14,-28,-33,-15,-29,-16,-17,]),'EQUAL':([10,14,15,16,17,23,63,71,75,],[19,-21,-25,-26,-56,-22,-23,81,-24,]),'RIGHTSQUAREBRACKET':([14,15,16,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,66,67,68,72,75,76,77,79,83,84,],[-21,-25,-26,-56,62,-22,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,65,72,-23,-27,76,-30,-32,82,-24,-28,83,-33,-29,-31,]),'DOT':([14,15,16,17,63,],[24,-25,-26,-56,24,]),'COMMA':([17,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,66,67,68,70,76,79,83,84,86,],[-56,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,-27,77,78,-32,80,-28,-33,-29,-31,-20,]),'RIGHTBRACKET':([17,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,65,68,69,70,76,79,83,85,86,],[-56,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,-64,-54,-57,-55,-65,-66,-67,-68,-69,68,-27,-32,79,-34,-28,-33,-29,-35,-20,]),'INT':([19,59,78,81,],[44,44,44,44,]),'FLOAT':([19,59,78,81,],[45,45,45,45,]),'INF':([19,59,78,81,],[46,46,46,46,]),'NAN':([19,59,78,81,],[47,47,47,47,]),'HEXADECIMAL':([19,59,78,81,],[48,48,48,48,]),'BINARY':([19,59,78,81,],[49,49,49,49,]),'OCTAL':([19,59,78,81,],[50,50,50,50,]),'MSTRING':([19,59,78,81,],[51,51,51,51,]),'LITERALSTRING':([19,59,78,81,],[52,52,52,52,]),'MLSTRING':([19,59,78,81,],[53,53,53,53,]),'BOOLEAN':([19,59,78,81,],[54,54,54,54,]),'DATE':([19,59,78,81,],[55,55,55,55,]),'TIME':([19,59,78,81,],[56,56,56,56,]),'DATETIME':([19,59,78,81,],[57,57,57,57,]),'OFFSETDATETIME':([19,59,78,81,],[58,58,58,58,]),'LEFTBRACKET':([19,59,78,81,],[60,60,60,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,],[2,18,]),'statement':([0,3,],[3,3,]),'table':([0,3,],[4,4,]),'assignment':([0,3,],[5,5,]),'comment':([0,3,],[6,6,]),'newline':([0,3,],[7,7,]),'header1':([0,3,],[8,8,]),'header2':([0,3,],[9,9,]),'name':([0,3,13,21,60,80,],[10,10,22,61,71,71,]),'elementoVar':([0,3,13,21,24,60,80,],[14,14,14,14,63,14,14,]),'string':([0,3,13,19,21,24,59,60,78,80,81,],[16,16,16,33,16,16,33,16,33,16,33,]),'name2':([14,63,],[23,75,]),'elemento':([19,59,78,81,],[25,67,67,86,]),'int':([19,59,78,81,],[26,26,26,26,]),'float':([19,59,78,81,],[27,27,27,27,]),'inf':([19,59,78,81,],[28,28,28,28,]),'nan':([19,59,78,81,],[29,29,29,29,]),'hexadecimal':([19,59,78,81,],[30,30,30,30,]),'binary':([19,59,78,81,],[31,31,31,31,]),'octal':([19,59,78,81,],[32,32,32,32,]),'mstring':([19,59,78,81,],[34,34,34,34,]),'lstring':([19,59,78,81,],[35,35,35,35,]),'mlstring':([19,59,78,81,],[36,36,36,36,]),'boolean':([19,59,78,81,],[37,37,37,37,]),'date':([19,59,78,81,],[38,38,38,38,]),'time':([19,59,78,81,],[39,39,39,39,]),'datetime':([19,59,78,81,],[40,40,40,40,]),'offset_datetime':([19,59,78,81,],[41,41,41,41,]),'lista':([19,59,78,81,],[42,42,42,42,]),'object':([19,59,78,81,],[43,43,43,43,]),'conteudo_lista':([59,78,],[66,84,]),'conteudo_object':([60,80,],[69,85,]),'assignment_object':([60,80,],[70,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analisador_sintatico.py',12),
  ('statements -> statement','statements',1,'p_statements','analisador_sintatico.py',23),
  ('statements -> statement statements','statements',2,'p_statements','analisador_sintatico.py',24),
  ('statement -> table','statement',1,'p_statement','analisador_sintatico.py',61),
  ('statement -> assignment','statement',1,'p_statement','analisador_sintatico.py',62),
  ('statement -> comment','statement',1,'p_statement','analisador_sintatico.py',63),
  ('statement -> newline','statement',1,'p_statement','analisador_sintatico.py',64),
  ('newline -> NEWLINE','newline',1,'p_newline','analisador_sintatico.py',71),
  ('comment -> COMMENT NEWLINE','comment',2,'p_comment','analisador_sintatico.py',77),
  ('table -> header1','table',1,'p_table','analisador_sintatico.py',83),
  ('table -> header2','table',1,'p_table','analisador_sintatico.py',84),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET','header1',3,'p_header1','analisador_sintatico.py',90),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE','header1',4,'p_header1','analisador_sintatico.py',91),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET COMMENT','header1',4,'p_header1','analisador_sintatico.py',92),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET','header2',5,'p_header2','analisador_sintatico.py',105),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE','header2',6,'p_header2','analisador_sintatico.py',106),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET COMMENT','header2',6,'p_header2','analisador_sintatico.py',107),
  ('assignment -> name EQUAL elemento','assignment',3,'p_assignment','analisador_sintatico.py',121),
  ('assignment -> name EQUAL elemento NEWLINE','assignment',4,'p_assignment','analisador_sintatico.py',122),
  ('assignment_object -> name EQUAL elemento','assignment_object',3,'p_assignment_object','analisador_sintatico.py',136),
  ('name -> elementoVar','name',1,'p_name','analisador_sintatico.py',142),
  ('name -> elementoVar name2','name',2,'p_name','analisador_sintatico.py',143),
  ('name2 -> DOT elementoVar','name2',2,'p_name2','analisador_sintatico.py',152),
  ('name2 -> DOT elementoVar name2','name2',3,'p_name2','analisador_sintatico.py',153),
  ('elementoVar -> VAR','elementoVar',1,'p_elemento_var','analisador_sintatico.py',162),
  ('elementoVar -> string','elementoVar',1,'p_elemento_var','analisador_sintatico.py',163),
  ('lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET','lista',2,'p_lista','analisador_sintatico.py',169),
  ('lista -> LEFTSQUAREBRACKET conteudo_lista RIGHTSQUAREBRACKET','lista',3,'p_lista','analisador_sintatico.py',170),
  ('lista -> LEFTSQUAREBRACKET conteudo_lista COMMA RIGHTSQUAREBRACKET','lista',4,'p_lista','analisador_sintatico.py',171),
  ('conteudo_lista -> elemento','conteudo_lista',1,'p_conteudo_lista','analisador_sintatico.py',180),
  ('conteudo_lista -> elemento COMMA conteudo_lista','conteudo_lista',3,'p_conteudo_lista','analisador_sintatico.py',181),
  ('object -> LEFTBRACKET RIGHTBRACKET','object',2,'p_object','analisador_sintatico.py',190),
  ('object -> LEFTBRACKET conteudo_object RIGHTBRACKET','object',3,'p_object','analisador_sintatico.py',191),
  ('conteudo_object -> assignment_object','conteudo_object',1,'p_conteudo_object','analisador_sintatico.py',200),
  ('conteudo_object -> assignment_object COMMA conteudo_object','conteudo_object',3,'p_conteudo_object','analisador_sintatico.py',201),
  ('elemento -> int','elemento',1,'p_elemento','analisador_sintatico.py',210),
  ('elemento -> float','elemento',1,'p_elemento','analisador_sintatico.py',211),
  ('elemento -> inf','elemento',1,'p_elemento','analisador_sintatico.py',212),
  ('elemento -> nan','elemento',1,'p_elemento','analisador_sintatico.py',213),
  ('elemento -> hexadecimal','elemento',1,'p_elemento','analisador_sintatico.py',214),
  ('elemento -> binary','elemento',1,'p_elemento','analisador_sintatico.py',215),
  ('elemento -> octal','elemento',1,'p_elemento','analisador_sintatico.py',216),
  ('elemento -> string','elemento',1,'p_elemento','analisador_sintatico.py',217),
  ('elemento -> mstring','elemento',1,'p_elemento','analisador_sintatico.py',218),
  ('elemento -> lstring','elemento',1,'p_elemento','analisador_sintatico.py',219),
  ('elemento -> mlstring','elemento',1,'p_elemento','analisador_sintatico.py',220),
  ('elemento -> boolean','elemento',1,'p_elemento','analisador_sintatico.py',221),
  ('elemento -> date','elemento',1,'p_elemento','analisador_sintatico.py',222),
  ('elemento -> time','elemento',1,'p_elemento','analisador_sintatico.py',223),
  ('elemento -> datetime','elemento',1,'p_elemento','analisador_sintatico.py',224),
  ('elemento -> offset_datetime','elemento',1,'p_elemento','analisador_sintatico.py',225),
  ('elemento -> lista','elemento',1,'p_elemento','analisador_sintatico.py',226),
  ('elemento -> object','elemento',1,'p_elemento','analisador_sintatico.py',227),
  ('mstring -> MSTRING','mstring',1,'p_mstring','analisador_sintatico.py',233),
  ('mlstring -> MLSTRING','mlstring',1,'p_mlstring','analisador_sintatico.py',239),
  ('string -> STRING','string',1,'p_string','analisador_sintatico.py',245),
  ('lstring -> LITERALSTRING','lstring',1,'p_lstring','analisador_sintatico.py',251),
  ('int -> INT','int',1,'p_number','analisador_sintatico.py',257),
  ('float -> FLOAT','float',1,'p_float','analisador_sintatico.py',263),
  ('inf -> INF','inf',1,'p_inf','analisador_sintatico.py',269),
  ('nan -> NAN','nan',1,'p_nan','analisador_sintatico.py',275),
  ('hexadecimal -> HEXADECIMAL','hexadecimal',1,'p_hexadecimal','analisador_sintatico.py',281),
  ('binary -> BINARY','binary',1,'p_binary','analisador_sintatico.py',287),
  ('octal -> OCTAL','octal',1,'p_octal','analisador_sintatico.py',293),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','analisador_sintatico.py',299),
  ('date -> DATE','date',1,'p_date','analisador_sintatico.py',305),
  ('time -> TIME','time',1,'p_time','analisador_sintatico.py',311),
  ('datetime -> DATETIME','datetime',1,'p_datetime','analisador_sintatico.py',317),
  ('offset_datetime -> OFFSETDATETIME','offset_datetime',1,'p_offset_datetime','analisador_sintatico.py',323),
]
