
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBINARY BOOLEAN COMMA COMMENT DATE DATETIME DOT EMPTY EQUAL HEXADECIMAL LEFTBRACKET LEFTSQUAREBRACKET MSTRING NUMBER OCTAL RIGHTBRACKET RIGHTSQUAREBRACKET STRING TIME VAR\n        program : table\n                | assignment\n                | empty\n                | comment\n    \n        comment : COMMENT\n    \n        empty : EMPTY\n    \n        table : LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET\n    \n        assignment : name EQUAL elemento\n    \n        name : elementoVar\n            | elementoVar name2\n    \n        name2 : DOT elementoVar\n            | DOT elementoVar name2\n    \n        elementoVar : VAR\n                    | STRING\n                    | NUMBER\n    \n        lista : LEFTSQUAREBRACKET RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET ContList RIGHTSQUAREBRACKET\n    \n        ContList : elemento\n                | elemento ContList2\n    \n    ContList2 : COMMA \n            | COMMA ContList\n    \n        object : LEFTBRACKET RIGHTBRACKET\n                | LEFTBRACKET ContObject RIGHTBRACKET\n    \n        ContObject : assignment\n                | assignment COMMA ContObject\n    \n        elemento : \n             | number\n             | string\n             | boolean\n             | date\n             | time\n             | datetime\n             | lista\n             | object\n    \n        string : STRING\n    \n        number : NUMBER\n    \n        boolean : BOOLEAN\n    \n        date : DATE\n    \n        time : TIME\n    \n        datetime : DATETIME\n    '
    
_lr_action_items = {'LEFTSQUAREBRACKET':([0,6,16,36,50,],[6,14,36,36,36,]),'EMPTY':([0,],[8,]),'COMMENT':([0,],[9,]),'VAR':([0,6,14,18,37,52,],[11,11,11,11,11,11,]),'STRING':([0,6,14,16,18,36,37,50,52,],[12,12,12,31,12,31,12,31,12,]),'NUMBER':([0,6,14,16,18,36,37,50,52,],[13,13,13,30,13,30,13,30,13,]),'$end':([1,2,3,4,5,8,9,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,43,47,48,51,],[0,-1,-2,-3,-4,-6,-5,-27,-7,-9,-28,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,-39,-40,-41,-17,-23,-8,-18,-24,]),'EQUAL':([7,10,11,12,13,17,38,46,],[16,-10,-14,-15,-16,-11,-12,-13,]),'RIGHTSQUAREBRACKET':([10,11,12,13,15,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,46,48,49,50,51,53,],[-10,-14,-15,-16,20,-11,39,-28,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,-39,-40,-41,40,-12,47,-17,48,-19,-23,-13,-18,-20,-21,-24,-22,]),'DOT':([10,11,12,13,38,],[18,-14,-15,-16,18,]),'COMMA':([16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,42,43,45,48,50,51,],[-27,-9,-28,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,-39,-40,-41,-27,-17,50,-23,52,-18,-27,-24,]),'RIGHTBRACKET':([16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,43,44,45,48,51,54,],[-27,-9,-28,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,-39,-40,-41,43,-17,-23,51,-25,-18,-24,-26,]),'BOOLEAN':([16,36,50,],[32,32,32,]),'DATE':([16,36,50,],[33,33,33,]),'TIME':([16,36,50,],[34,34,34,]),'DATETIME':([16,36,50,],[35,35,35,]),'LEFTBRACKET':([16,36,50,],[37,37,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'table':([0,],[2,]),'assignment':([0,37,52,],[3,45,45,]),'empty':([0,],[4,]),'comment':([0,],[5,]),'name':([0,6,14,37,52,],[7,15,19,7,7,]),'elementoVar':([0,6,14,18,37,52,],[10,10,10,38,10,10,]),'name2':([10,38,],[17,46,]),'elemento':([16,36,50,],[21,42,42,]),'number':([16,36,50,],[22,22,22,]),'string':([16,36,50,],[23,23,23,]),'boolean':([16,36,50,],[24,24,24,]),'date':([16,36,50,],[25,25,25,]),'time':([16,36,50,],[26,26,26,]),'datetime':([16,36,50,],[27,27,27,]),'lista':([16,36,50,],[28,28,28,]),'object':([16,36,50,],[29,29,29,]),'ContList':([36,50,],[41,53,]),'ContObject':([37,52,],[44,54,]),'ContList2':([42,],[49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> table','program',1,'p_program','analisador_sintatico.py',12),
  ('program -> assignment','program',1,'p_program','analisador_sintatico.py',13),
  ('program -> empty','program',1,'p_program','analisador_sintatico.py',14),
  ('program -> comment','program',1,'p_program','analisador_sintatico.py',15),
  ('comment -> COMMENT','comment',1,'p_comment','analisador_sintatico.py',22),
  ('empty -> EMPTY','empty',1,'p_empty','analisador_sintatico.py',29),
  ('table -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET','table',3,'p_table','analisador_sintatico.py',35),
  ('table -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET','table',5,'p_table','analisador_sintatico.py',36),
  ('assignment -> name EQUAL elemento','assignment',3,'p_assignment','analisador_sintatico.py',45),
  ('name -> elementoVar','name',1,'p_name','analisador_sintatico.py',51),
  ('name -> elementoVar name2','name',2,'p_name','analisador_sintatico.py',52),
  ('name2 -> DOT elementoVar','name2',2,'p_name2','analisador_sintatico.py',61),
  ('name2 -> DOT elementoVar name2','name2',3,'p_name2','analisador_sintatico.py',62),
  ('elementoVar -> VAR','elementoVar',1,'p_elemento_var','analisador_sintatico.py',71),
  ('elementoVar -> STRING','elementoVar',1,'p_elemento_var','analisador_sintatico.py',72),
  ('elementoVar -> NUMBER','elementoVar',1,'p_elemento_var','analisador_sintatico.py',73),
  ('lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET','lista',2,'p_lista','analisador_sintatico.py',79),
  ('lista -> LEFTSQUAREBRACKET ContList RIGHTSQUAREBRACKET','lista',3,'p_lista','analisador_sintatico.py',80),
  ('ContList -> elemento','ContList',1,'p_conteudo_lista','analisador_sintatico.py',89),
  ('ContList -> elemento ContList2','ContList',2,'p_conteudo_lista','analisador_sintatico.py',90),
  ('ContList2 -> COMMA','ContList2',1,'p_conteudo_lista2','analisador_sintatico.py',99),
  ('ContList2 -> COMMA ContList','ContList2',2,'p_conteudo_lista2','analisador_sintatico.py',100),
  ('object -> LEFTBRACKET RIGHTBRACKET','object',2,'p_object','analisador_sintatico.py',109),
  ('object -> LEFTBRACKET ContObject RIGHTBRACKET','object',3,'p_object','analisador_sintatico.py',110),
  ('ContObject -> assignment','ContObject',1,'p_conteudo_object','analisador_sintatico.py',119),
  ('ContObject -> assignment COMMA ContObject','ContObject',3,'p_conteudo_object','analisador_sintatico.py',120),
  ('elemento -> <empty>','elemento',0,'p_elemento','analisador_sintatico.py',130),
  ('elemento -> number','elemento',1,'p_elemento','analisador_sintatico.py',131),
  ('elemento -> string','elemento',1,'p_elemento','analisador_sintatico.py',132),
  ('elemento -> boolean','elemento',1,'p_elemento','analisador_sintatico.py',133),
  ('elemento -> date','elemento',1,'p_elemento','analisador_sintatico.py',134),
  ('elemento -> time','elemento',1,'p_elemento','analisador_sintatico.py',135),
  ('elemento -> datetime','elemento',1,'p_elemento','analisador_sintatico.py',136),
  ('elemento -> lista','elemento',1,'p_elemento','analisador_sintatico.py',137),
  ('elemento -> object','elemento',1,'p_elemento','analisador_sintatico.py',138),
  ('string -> STRING','string',1,'p_string','analisador_sintatico.py',144),
  ('number -> NUMBER','number',1,'p_number','analisador_sintatico.py',150),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','analisador_sintatico.py',156),
  ('date -> DATE','date',1,'p_date','analisador_sintatico.py',162),
  ('time -> TIME','time',1,'p_time','analisador_sintatico.py',168),
  ('datetime -> DATETIME','datetime',1,'p_datetime','analisador_sintatico.py',174),
]
