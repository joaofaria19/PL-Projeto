
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ListaBOOLEAN COMMA COMMENT DATE DATETIME DOT EQUAL LEFTBRACKET LEFTSQUAREBRACKET MSTRING NUMBER RIGHTBRACKET RIGHTSQUAREBRACKET STRING TIME VAR\n    Lista : LEFTSQUAREBRACKET RIGHTSQUAREBRACKET\n        | LEFTSQUAREBRACKET Conteudo RIGHTSQUAREBRACKET\n        | LEFTSQUAREBRACKET ConteudoVar RIGHTSQUAREBRACKET\n    \n    Conteudo : Elemento\n            | Elemento Conteudo2\n    \n    Conteudo2 : COMMA \n            | COMMA Conteudo\n    \n    ConteudoVar : Elemento2\n            | Elemento2 DOT ConteudoVar\n    \n    Elemento2 : VAR \n            | STRING\n            | NUMBER\n    \n    Elemento : NUMBER\n            | STRING\n            | MSTRING\n            | DATE \n            | TIME\n            | DATETIME\n            | BOOLEAN\n            | Lista\n    '
    
_lr_action_items = {'LEFTSQUAREBRACKET':([0,2,20,],[2,2,2,]),'$end':([1,3,17,18,],[0,-1,-2,-3,]),'RIGHTSQUAREBRACKET':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,],[3,-1,17,18,-4,-8,-12,-11,-15,-16,-17,-18,-19,-20,-10,-2,-3,-5,-6,-7,-13,-14,-9,-11,-12,]),'NUMBER':([2,20,21,],[8,23,27,]),'STRING':([2,20,21,],[9,24,26,]),'MSTRING':([2,20,],[10,10,]),'DATE':([2,20,],[11,11,]),'TIME':([2,20,],[12,12,]),'DATETIME':([2,20,],[13,13,]),'BOOLEAN':([2,20,],[14,14,]),'VAR':([2,21,],[16,16,]),'COMMA':([3,6,8,9,10,11,12,13,14,15,17,18,23,24,],[-1,20,-13,-14,-15,-16,-17,-18,-19,-20,-2,-3,-13,-14,]),'DOT':([7,8,9,16,26,27,],[21,-12,-11,-10,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Lista':([0,2,20,],[1,15,15,]),'Conteudo':([2,20,],[4,22,]),'ConteudoVar':([2,21,],[5,25,]),'Elemento':([2,20,],[6,6,]),'Elemento2':([2,21,],[7,7,]),'Conteudo2':([6,],[19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Lista","S'",1,None,None,None),
  ('Lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET','Lista',2,'p_lista','analisador_sintatico_list.py',10),
  ('Lista -> LEFTSQUAREBRACKET Conteudo RIGHTSQUAREBRACKET','Lista',3,'p_lista','analisador_sintatico_list.py',11),
  ('Lista -> LEFTSQUAREBRACKET ConteudoVar RIGHTSQUAREBRACKET','Lista',3,'p_lista','analisador_sintatico_list.py',12),
  ('Conteudo -> Elemento','Conteudo',1,'p_conteudo','analisador_sintatico_list.py',21),
  ('Conteudo -> Elemento Conteudo2','Conteudo',2,'p_conteudo','analisador_sintatico_list.py',22),
  ('Conteudo2 -> COMMA','Conteudo2',1,'p_conteudo2','analisador_sintatico_list.py',31),
  ('Conteudo2 -> COMMA Conteudo','Conteudo2',2,'p_conteudo2','analisador_sintatico_list.py',32),
  ('ConteudoVar -> Elemento2','ConteudoVar',1,'p_conteudo_var','analisador_sintatico_list.py',41),
  ('ConteudoVar -> Elemento2 DOT ConteudoVar','ConteudoVar',3,'p_conteudo_var','analisador_sintatico_list.py',42),
  ('Elemento2 -> VAR','Elemento2',1,'p_elemento2','analisador_sintatico_list.py',51),
  ('Elemento2 -> STRING','Elemento2',1,'p_elemento2','analisador_sintatico_list.py',52),
  ('Elemento2 -> NUMBER','Elemento2',1,'p_elemento2','analisador_sintatico_list.py',53),
  ('Elemento -> NUMBER','Elemento',1,'p_elemento','analisador_sintatico_list.py',60),
  ('Elemento -> STRING','Elemento',1,'p_elemento','analisador_sintatico_list.py',61),
  ('Elemento -> MSTRING','Elemento',1,'p_elemento','analisador_sintatico_list.py',62),
  ('Elemento -> DATE','Elemento',1,'p_elemento','analisador_sintatico_list.py',63),
  ('Elemento -> TIME','Elemento',1,'p_elemento','analisador_sintatico_list.py',64),
  ('Elemento -> DATETIME','Elemento',1,'p_elemento','analisador_sintatico_list.py',65),
  ('Elemento -> BOOLEAN','Elemento',1,'p_elemento','analisador_sintatico_list.py',66),
  ('Elemento -> Lista','Elemento',1,'p_elemento','analisador_sintatico_list.py',67),
]
