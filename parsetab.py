
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBINARY BOOLEAN COMMA COMMENT DATE DATETIME DOT EQUAL FLOAT HEXADECIMAL INF INT LEFTBRACKET LEFTSQUAREBRACKET MSTRING NAN NEWLINE OCTAL OFFSET OFFSETDATETIME RIGHTBRACKET RIGHTSQUAREBRACKET STRING TIME VAR\n        program : statement\n                | statement program\n    \n        statement : table\n                | assignment\n                | comment\n                | NEWLINE\n    \n        comment : COMMENT NEWLINE\n    \n        table : header1\n            | header2\n    \n        header1 : LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE\n    \n        header2 : LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE\n    \n        assignment : name EQUAL elemento NEWLINE\n    \n        assignment_object : name EQUAL elemento\n    \n        name : elementoVar\n            | elementoVar name2\n    \n        name2 : DOT elementoVar\n            | DOT elementoVar name2\n    \n        elementoVar : VAR\n                    | string\n                    | int\n    \n        lista : LEFTSQUAREBRACKET RIGHTSQUAREBRACKET\n            | LEFTSQUAREBRACKET ContList RIGHTSQUAREBRACKET\n    \n        ContList : elemento\n                | elemento ContList2\n    \n    ContList2 : COMMA \n            | COMMA ContList\n    \n        object : LEFTBRACKET RIGHTBRACKET\n                | LEFTBRACKET ContObject RIGHTBRACKET\n    \n        ContObject : assignment_object\n                | assignment_object COMMA ContObject\n    \n        elemento : \n             | int\n             | float\n             | inf\n             | nan\n             | hexadecimal\n             | binary\n             | octal\n             | string\n             | boolean\n             | date\n             | time\n             | datetime\n             | offset_datetime\n             | lista\n             | object\n    \n        string : STRING\n    \n        int : INT\n    \n        float : FLOAT\n    \n        inf : INF\n    \n        nan : NAN\n    \n        hexadecimal : HEXADECIMAL\n    \n        binary : BINARY\n    \n        octal : OCTAL\n    \n        boolean : BOOLEAN\n    \n        date : DATE\n    \n        time : TIME\n    \n        datetime : DATETIME\n    \n        offset_datetime : OFFSETDATETIME\n    '
    
_lr_action_items = {'NEWLINE':([0,2,3,4,5,6,7,8,10,16,17,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,58,61,66,68,71,74,78,],[6,6,-3,-4,-5,-6,-8,-9,20,-47,-48,-31,-7,57,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,66,-12,-21,-27,-10,-22,-28,78,-11,]),'COMMENT':([0,2,3,4,5,6,7,8,20,57,66,78,],[10,10,-3,-4,-5,-6,-8,-9,-7,-12,-10,-11,]),'LEFTSQUAREBRACKET':([0,2,3,4,5,6,7,8,11,19,20,52,57,66,70,73,78,],[11,11,-3,-4,-5,-6,-8,-9,21,52,-7,52,-12,-10,52,52,-11,]),'VAR':([0,2,3,4,5,6,7,8,11,20,21,24,53,57,66,72,78,],[13,13,-3,-4,-5,-6,-8,-9,13,-7,13,13,13,-12,-10,13,-11,]),'STRING':([0,2,3,4,5,6,7,8,11,19,20,21,24,52,53,57,66,70,72,73,78,],[16,16,-3,-4,-5,-6,-8,-9,16,16,-7,16,16,16,16,-12,-10,16,16,16,-11,]),'INT':([0,2,3,4,5,6,7,8,11,19,20,21,24,52,53,57,66,70,72,73,78,],[17,17,-3,-4,-5,-6,-8,-9,17,17,-7,17,17,17,17,-12,-10,17,17,17,-11,]),'$end':([1,2,3,4,5,6,7,8,18,20,57,66,78,],[0,-1,-3,-4,-5,-6,-8,-9,-2,-7,-12,-10,-11,]),'EQUAL':([9,12,13,14,15,16,17,23,56,64,67,],[19,-14,-18,-19,-20,-47,-48,-15,-16,73,-17,]),'RIGHTSQUAREBRACKET':([12,13,14,15,16,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,56,58,59,60,61,65,67,68,69,70,71,75,],[-14,-18,-19,-20,-47,-48,55,-15,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,58,65,-16,-21,68,-23,-27,74,-17,-22,-24,-25,-28,-26,]),'DOT':([12,13,14,15,16,17,56,],[24,-18,-19,-20,-47,-48,24,]),'COMMA':([16,17,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,60,61,63,68,70,71,73,77,],[-47,-48,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-31,-21,70,-27,72,-22,-31,-28,-31,-13,]),'RIGHTBRACKET':([16,17,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,61,62,63,68,71,73,76,77,],[-47,-48,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,61,-21,-27,71,-29,-22,-28,-31,-30,-13,]),'FLOAT':([19,52,70,73,],[41,41,41,41,]),'INF':([19,52,70,73,],[42,42,42,42,]),'NAN':([19,52,70,73,],[43,43,43,43,]),'HEXADECIMAL':([19,52,70,73,],[44,44,44,44,]),'BINARY':([19,52,70,73,],[45,45,45,45,]),'OCTAL':([19,52,70,73,],[46,46,46,46,]),'BOOLEAN':([19,52,70,73,],[47,47,47,47,]),'DATE':([19,52,70,73,],[48,48,48,48,]),'TIME':([19,52,70,73,],[49,49,49,49,]),'DATETIME':([19,52,70,73,],[50,50,50,50,]),'OFFSETDATETIME':([19,52,70,73,],[51,51,51,51,]),'LEFTBRACKET':([19,52,70,73,],[53,53,53,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,18,]),'statement':([0,2,],[2,2,]),'table':([0,2,],[3,3,]),'assignment':([0,2,],[4,4,]),'comment':([0,2,],[5,5,]),'header1':([0,2,],[7,7,]),'header2':([0,2,],[8,8,]),'name':([0,2,11,21,53,72,],[9,9,22,54,64,64,]),'elementoVar':([0,2,11,21,24,53,72,],[12,12,12,12,56,12,12,]),'string':([0,2,11,19,21,24,52,53,70,72,73,],[14,14,14,33,14,14,33,14,33,14,33,]),'int':([0,2,11,19,21,24,52,53,70,72,73,],[15,15,15,26,15,15,26,15,26,15,26,]),'name2':([12,56,],[23,67,]),'elemento':([19,52,70,73,],[25,60,60,77,]),'float':([19,52,70,73,],[27,27,27,27,]),'inf':([19,52,70,73,],[28,28,28,28,]),'nan':([19,52,70,73,],[29,29,29,29,]),'hexadecimal':([19,52,70,73,],[30,30,30,30,]),'binary':([19,52,70,73,],[31,31,31,31,]),'octal':([19,52,70,73,],[32,32,32,32,]),'boolean':([19,52,70,73,],[34,34,34,34,]),'date':([19,52,70,73,],[35,35,35,35,]),'time':([19,52,70,73,],[36,36,36,36,]),'datetime':([19,52,70,73,],[37,37,37,37,]),'offset_datetime':([19,52,70,73,],[38,38,38,38,]),'lista':([19,52,70,73,],[39,39,39,39,]),'object':([19,52,70,73,],[40,40,40,40,]),'ContList':([52,70,],[59,75,]),'ContObject':([53,72,],[62,76,]),'assignment_object':([53,72,],[63,63,]),'ContList2':([60,],[69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','analisador_sintatico.py',23),
  ('program -> statement program','program',2,'p_program','analisador_sintatico.py',24),
  ('statement -> table','statement',1,'p_statement','analisador_sintatico.py',64),
  ('statement -> assignment','statement',1,'p_statement','analisador_sintatico.py',65),
  ('statement -> comment','statement',1,'p_statement','analisador_sintatico.py',66),
  ('statement -> NEWLINE','statement',1,'p_statement','analisador_sintatico.py',67),
  ('comment -> COMMENT NEWLINE','comment',2,'p_comment','analisador_sintatico.py',73),
  ('table -> header1','table',1,'p_table','analisador_sintatico.py',79),
  ('table -> header2','table',1,'p_table','analisador_sintatico.py',80),
  ('header1 -> LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET NEWLINE','header1',4,'p_header1','analisador_sintatico.py',86),
  ('header2 -> LEFTSQUAREBRACKET LEFTSQUAREBRACKET name RIGHTSQUAREBRACKET RIGHTSQUAREBRACKET NEWLINE','header2',6,'p_header2','analisador_sintatico.py',92),
  ('assignment -> name EQUAL elemento NEWLINE','assignment',4,'p_assignment','analisador_sintatico.py',98),
  ('assignment_object -> name EQUAL elemento','assignment_object',3,'p_assignment_object','analisador_sintatico.py',105),
  ('name -> elementoVar','name',1,'p_name','analisador_sintatico.py',111),
  ('name -> elementoVar name2','name',2,'p_name','analisador_sintatico.py',112),
  ('name2 -> DOT elementoVar','name2',2,'p_name2','analisador_sintatico.py',121),
  ('name2 -> DOT elementoVar name2','name2',3,'p_name2','analisador_sintatico.py',122),
  ('elementoVar -> VAR','elementoVar',1,'p_elemento_var','analisador_sintatico.py',131),
  ('elementoVar -> string','elementoVar',1,'p_elemento_var','analisador_sintatico.py',132),
  ('elementoVar -> int','elementoVar',1,'p_elemento_var','analisador_sintatico.py',133),
  ('lista -> LEFTSQUAREBRACKET RIGHTSQUAREBRACKET','lista',2,'p_lista','analisador_sintatico.py',139),
  ('lista -> LEFTSQUAREBRACKET ContList RIGHTSQUAREBRACKET','lista',3,'p_lista','analisador_sintatico.py',140),
  ('ContList -> elemento','ContList',1,'p_conteudo_lista','analisador_sintatico.py',149),
  ('ContList -> elemento ContList2','ContList',2,'p_conteudo_lista','analisador_sintatico.py',150),
  ('ContList2 -> COMMA','ContList2',1,'p_conteudo_lista2','analisador_sintatico.py',159),
  ('ContList2 -> COMMA ContList','ContList2',2,'p_conteudo_lista2','analisador_sintatico.py',160),
  ('object -> LEFTBRACKET RIGHTBRACKET','object',2,'p_object','analisador_sintatico.py',169),
  ('object -> LEFTBRACKET ContObject RIGHTBRACKET','object',3,'p_object','analisador_sintatico.py',170),
  ('ContObject -> assignment_object','ContObject',1,'p_conteudo_object','analisador_sintatico.py',179),
  ('ContObject -> assignment_object COMMA ContObject','ContObject',3,'p_conteudo_object','analisador_sintatico.py',180),
  ('elemento -> <empty>','elemento',0,'p_elemento','analisador_sintatico.py',190),
  ('elemento -> int','elemento',1,'p_elemento','analisador_sintatico.py',191),
  ('elemento -> float','elemento',1,'p_elemento','analisador_sintatico.py',192),
  ('elemento -> inf','elemento',1,'p_elemento','analisador_sintatico.py',193),
  ('elemento -> nan','elemento',1,'p_elemento','analisador_sintatico.py',194),
  ('elemento -> hexadecimal','elemento',1,'p_elemento','analisador_sintatico.py',195),
  ('elemento -> binary','elemento',1,'p_elemento','analisador_sintatico.py',196),
  ('elemento -> octal','elemento',1,'p_elemento','analisador_sintatico.py',197),
  ('elemento -> string','elemento',1,'p_elemento','analisador_sintatico.py',198),
  ('elemento -> boolean','elemento',1,'p_elemento','analisador_sintatico.py',199),
  ('elemento -> date','elemento',1,'p_elemento','analisador_sintatico.py',200),
  ('elemento -> time','elemento',1,'p_elemento','analisador_sintatico.py',201),
  ('elemento -> datetime','elemento',1,'p_elemento','analisador_sintatico.py',202),
  ('elemento -> offset_datetime','elemento',1,'p_elemento','analisador_sintatico.py',203),
  ('elemento -> lista','elemento',1,'p_elemento','analisador_sintatico.py',204),
  ('elemento -> object','elemento',1,'p_elemento','analisador_sintatico.py',205),
  ('string -> STRING','string',1,'p_string','analisador_sintatico.py',211),
  ('int -> INT','int',1,'p_number','analisador_sintatico.py',217),
  ('float -> FLOAT','float',1,'p_float','analisador_sintatico.py',223),
  ('inf -> INF','inf',1,'p_inf','analisador_sintatico.py',229),
  ('nan -> NAN','nan',1,'p_nan','analisador_sintatico.py',235),
  ('hexadecimal -> HEXADECIMAL','hexadecimal',1,'p_hexadecimal','analisador_sintatico.py',241),
  ('binary -> BINARY','binary',1,'p_binary','analisador_sintatico.py',247),
  ('octal -> OCTAL','octal',1,'p_octal','analisador_sintatico.py',253),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','analisador_sintatico.py',259),
  ('date -> DATE','date',1,'p_date','analisador_sintatico.py',265),
  ('time -> TIME','time',1,'p_time','analisador_sintatico.py',271),
  ('datetime -> DATETIME','datetime',1,'p_datetime','analisador_sintatico.py',277),
  ('offset_datetime -> OFFSETDATETIME','offset_datetime',1,'p_offset_datetime','analisador_sintatico.py',283),
]
